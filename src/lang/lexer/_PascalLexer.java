/* The following code was generated by JFlex 1.4.1 on 1/20/13 4:51 PM */

package com.siberika.idea.pascal.lang.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;
import com.siberika.idea.pascal.lang.psi.PasTypes;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.1
 * on 1/20/13 4:51 PM from the specification file
 * <tt>pascal.flex</tt>
 */
class _PascalLexer implements FlexLexer, PasTypes {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int XSTRING = 1;

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\13\1\1\1\3\1\0\1\1\1\2\16\13\4\0\1\1\2\0"+
    "\1\70\1\21\1\0\1\71\1\14\1\5\1\7\1\6\1\55\1\57"+
    "\1\17\1\20\1\4\12\15\1\65\1\56\1\63\1\62\1\64\1\0"+
    "\1\67\1\22\1\23\2\22\1\16\1\22\24\12\1\60\1\0\1\61"+
    "\1\66\1\12\1\0\1\24\1\46\1\37\1\26\1\42\1\43\1\51"+
    "\1\35\1\32\1\54\1\52\1\36\1\27\1\25\1\30\1\40\1\12"+
    "\1\31\1\34\1\41\1\47\1\33\1\53\1\45\1\44\1\50\1\10"+
    "\1\0\1\11\1\0\41\13\2\0\4\12\4\0\1\12\2\0\1\13"+
    "\7\0\1\12\4\0\1\12\5\0\27\12\1\0\37\12\1\0\u013f\12"+
    "\31\0\162\12\4\0\14\12\16\0\5\12\11\0\1\12\21\0\130\13"+
    "\5\0\23\13\12\0\1\12\13\0\1\12\1\0\3\12\1\0\1\12"+
    "\1\0\24\12\1\0\54\12\1\0\46\12\1\0\5\12\4\0\202\12"+
    "\1\0\4\13\3\0\105\12\1\0\46\12\2\0\2\12\6\0\20\12"+
    "\41\0\46\12\2\0\1\12\7\0\47\12\11\0\21\13\1\0\27\13"+
    "\1\0\3\13\1\0\1\13\1\0\2\13\1\0\1\13\13\0\33\12"+
    "\5\0\3\12\15\0\4\13\14\0\6\13\13\0\32\12\5\0\13\12"+
    "\16\13\7\0\12\13\4\0\2\12\1\13\143\12\1\0\1\12\10\13"+
    "\1\0\6\13\2\12\2\13\1\0\4\13\2\12\12\13\3\12\2\0"+
    "\1\12\17\0\1\13\1\12\1\13\36\12\33\13\2\0\3\12\60\0"+
    "\46\12\13\13\1\12\u014f\0\3\13\66\12\2\0\1\13\1\12\20\13"+
    "\2\0\1\12\4\13\3\0\12\12\2\13\2\0\12\13\21\0\3\13"+
    "\1\0\10\12\2\0\2\12\2\0\26\12\1\0\7\12\1\0\1\12"+
    "\3\0\4\12\2\0\1\13\1\12\7\13\2\0\2\13\2\0\3\13"+
    "\11\0\1\13\4\0\2\12\1\0\3\12\2\13\2\0\12\13\4\12"+
    "\15\0\3\13\1\0\6\12\4\0\2\12\2\0\26\12\1\0\7\12"+
    "\1\0\2\12\1\0\2\12\1\0\2\12\2\0\1\13\1\0\5\13"+
    "\4\0\2\13\2\0\3\13\13\0\4\12\1\0\1\12\7\0\14\13"+
    "\3\12\14\0\3\13\1\0\11\12\1\0\3\12\1\0\26\12\1\0"+
    "\7\12\1\0\2\12\1\0\5\12\2\0\1\13\1\12\10\13\1\0"+
    "\3\13\1\0\3\13\2\0\1\12\17\0\2\12\2\13\2\0\12\13"+
    "\1\0\1\12\17\0\3\13\1\0\10\12\2\0\2\12\2\0\26\12"+
    "\1\0\7\12\1\0\2\12\1\0\5\12\2\0\1\13\1\12\6\13"+
    "\3\0\2\13\2\0\3\13\10\0\2\13\4\0\2\12\1\0\3\12"+
    "\4\0\12\13\1\0\1\12\20\0\1\13\1\12\1\0\6\12\3\0"+
    "\3\12\1\0\4\12\3\0\2\12\1\0\1\12\1\0\2\12\3\0"+
    "\2\12\3\0\3\12\3\0\10\12\1\0\3\12\4\0\5\13\3\0"+
    "\3\13\1\0\4\13\11\0\1\13\17\0\11\13\11\0\1\12\7\0"+
    "\3\13\1\0\10\12\1\0\3\12\1\0\27\12\1\0\12\12\1\0"+
    "\5\12\4\0\7\13\1\0\3\13\1\0\4\13\7\0\2\13\11\0"+
    "\2\12\4\0\12\13\22\0\2\13\1\0\10\12\1\0\3\12\1\0"+
    "\27\12\1\0\12\12\1\0\5\12\2\0\1\13\1\12\7\13\1\0"+
    "\3\13\1\0\4\13\7\0\2\13\7\0\1\12\1\0\2\12\4\0"+
    "\12\13\22\0\2\13\1\0\10\12\1\0\3\12\1\0\27\12\1\0"+
    "\20\12\4\0\6\13\2\0\3\13\1\0\4\13\11\0\1\13\10\0"+
    "\2\12\4\0\12\13\22\0\2\13\1\0\22\12\3\0\30\12\1\0"+
    "\11\12\1\0\1\12\2\0\7\12\3\0\1\13\4\0\6\13\1\0"+
    "\1\13\1\0\10\13\22\0\2\13\15\0\60\12\1\13\2\12\7\13"+
    "\4\0\10\12\10\13\1\0\12\13\47\0\2\12\1\0\1\12\2\0"+
    "\2\12\1\0\1\12\2\0\1\12\6\0\4\12\1\0\7\12\1\0"+
    "\3\12\1\0\1\12\1\0\1\12\2\0\2\12\1\0\4\12\1\13"+
    "\2\12\6\13\1\0\2\13\1\12\2\0\5\12\1\0\1\12\1\0"+
    "\6\13\2\0\12\13\2\0\2\12\42\0\1\12\27\0\2\13\6\0"+
    "\12\13\13\0\1\13\1\0\1\13\1\0\1\13\4\0\2\13\10\12"+
    "\1\0\42\12\6\0\24\13\1\0\2\13\4\12\4\0\10\13\1\0"+
    "\44\13\11\0\1\13\71\0\42\12\1\0\5\12\1\0\2\12\1\0"+
    "\7\13\3\0\4\13\6\0\12\13\6\0\6\12\4\13\106\0\46\12"+
    "\12\0\51\12\7\0\132\12\5\0\104\12\5\0\122\12\6\0\7\12"+
    "\1\0\77\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0\1\12"+
    "\1\0\4\12\2\0\47\12\1\0\1\12\1\0\4\12\2\0\37\12"+
    "\1\0\1\12\1\0\4\12\2\0\7\12\1\0\1\12\1\0\4\12"+
    "\2\0\7\12\1\0\7\12\1\0\27\12\1\0\37\12\1\0\1\12"+
    "\1\0\4\12\2\0\7\12\1\0\47\12\1\0\23\12\16\0\11\13"+
    "\56\0\125\12\14\0\u026c\12\2\0\10\12\12\0\32\12\5\0\113\12"+
    "\3\0\3\12\17\0\15\12\1\0\4\12\3\13\13\0\22\12\3\13"+
    "\13\0\22\12\2\13\14\0\15\12\1\0\3\12\1\0\2\13\14\0"+
    "\64\12\40\13\3\0\1\12\3\0\2\12\1\13\2\0\12\13\41\0"+
    "\3\13\2\0\12\13\6\0\130\12\10\0\51\12\1\13\126\0\35\12"+
    "\3\0\14\13\4\0\14\13\12\0\12\13\36\12\2\0\5\12\u038b\0"+
    "\154\12\224\0\234\12\4\0\132\12\6\0\26\12\2\0\6\12\2\0"+
    "\46\12\2\0\6\12\2\0\10\12\1\0\1\12\1\0\1\12\1\0"+
    "\1\12\1\0\37\12\2\0\65\12\1\0\7\12\1\0\1\12\3\0"+
    "\3\12\1\0\7\12\3\0\4\12\2\0\6\12\4\0\15\12\5\0"+
    "\3\12\1\0\7\12\17\0\4\13\32\0\5\13\20\0\2\12\23\0"+
    "\1\12\13\0\4\13\6\0\6\13\1\0\1\12\15\0\1\12\40\0"+
    "\22\12\36\0\15\13\4\0\1\13\3\0\6\13\27\0\1\12\4\0"+
    "\1\12\2\0\12\12\1\0\1\12\3\0\5\12\6\0\1\12\1\0"+
    "\1\12\1\0\1\12\1\0\4\12\1\0\3\12\1\0\7\12\3\0"+
    "\3\12\5\0\5\12\26\0\44\12\u0e81\0\3\12\31\0\11\12\6\13"+
    "\1\0\5\12\2\0\5\12\4\0\126\12\2\0\2\13\2\0\3\12"+
    "\1\0\137\12\5\0\50\12\4\0\136\12\21\0\30\12\70\0\20\12"+
    "\u0200\0\u19b6\12\112\0\u51a6\12\132\0\u048d\12\u0773\0\u2ba4\12\u215c\0\u012e\12"+
    "\2\0\73\12\225\0\7\12\14\0\5\12\5\0\1\12\1\13\12\12"+
    "\1\0\15\12\1\0\5\12\1\0\1\12\1\0\2\12\1\0\2\12"+
    "\1\0\154\12\41\0\u016b\12\22\0\100\12\2\0\66\12\50\0\15\12"+
    "\3\0\20\13\20\0\4\13\17\0\2\12\30\0\3\12\31\0\1\12"+
    "\6\0\5\12\1\0\207\12\2\0\1\13\4\0\1\12\13\0\12\13"+
    "\7\0\32\12\4\0\1\12\1\0\32\12\12\0\132\12\3\0\6\12"+
    "\2\0\6\12\2\0\6\12\2\0\3\12\3\0\2\12\3\0\2\12"+
    "\22\0\3\13\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\1\1\11\1\12\1\13\1\14\24\10\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\1\1\33\3\7"+
    "\1\10\1\0\1\34\1\35\1\36\1\35\1\37\2\10"+
    "\1\40\4\10\1\41\3\10\1\42\1\43\1\10\1\44"+
    "\4\10\1\45\1\10\1\46\1\47\13\10\1\50\22\10"+
    "\1\51\1\52\1\53\1\54\1\7\1\10\1\0\1\37"+
    "\1\55\1\10\1\56\1\10\1\57\1\60\1\61\1\10"+
    "\1\62\2\10\1\63\2\10\1\64\12\10\1\65\1\66"+
    "\1\67\2\10\1\70\7\10\1\71\4\10\1\72\5\10"+
    "\1\73\3\10\1\74\11\10\1\35\1\0\1\37\22\10"+
    "\1\75\2\10\1\76\7\10\1\77\1\10\1\100\1\101"+
    "\1\102\1\103\4\10\1\104\3\10\1\105\1\10\1\106"+
    "\1\107\1\110\2\10\1\37\1\111\6\10\1\112\12\10"+
    "\1\113\1\10\1\114\1\10\1\115\7\10\1\116\2\10"+
    "\1\117\1\120\1\121\1\122\1\10\1\37\1\10\1\123"+
    "\3\10\1\124\2\10\1\125\1\126\2\10\1\127\2\10"+
    "\1\32\3\10\1\130\4\10\1\131\5\10\1\37\12\10"+
    "\1\132\4\10\1\133\1\10\1\134\1\10\1\135\2\10"+
    "\1\37\1\136\2\10\1\137\7\10\1\140\1\10\1\141"+
    "\2\10\1\142\1\10\1\37\5\10\1\143\1\144\2\10"+
    "\1\145\1\146\2\10\1\37\1\10\1\147\7\10\1\37"+
    "\1\10\1\150\3\10\1\151\2\10\1\37\4\10\1\152"+
    "\1\10\1\37\1\153\4\10\1\37\1\154\1\155\1\156"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37\1\10\1\37\1\10\1\37\1\10\1\37"+
    "\1\10\1\37";

  private static int [] zzUnpackAction() {
    int [] result = new int[626];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\72\0\164\0\164\0\256\0\350\0\164\0\164"+
    "\0\u0122\0\u015c\0\u0196\0\u01d0\0\164\0\u020a\0\u0244\0\u027e"+
    "\0\u02b8\0\u02f2\0\u032c\0\u0366\0\u03a0\0\u03da\0\u0414\0\u044e"+
    "\0\u0488\0\u04c2\0\u04fc\0\u0536\0\u0570\0\u05aa\0\u05e4\0\u061e"+
    "\0\u0658\0\u0692\0\u06cc\0\164\0\164\0\164\0\164\0\164"+
    "\0\164\0\u0706\0\u0740\0\u077a\0\164\0\164\0\164\0\164"+
    "\0\164\0\u07b4\0\u07ee\0\u0828\0\u0862\0\164\0\u089c\0\u0196"+
    "\0\u08d6\0\u0910\0\164\0\u094a\0\u0984\0\u09be\0\u09f8\0\u0a32"+
    "\0\u0a6c\0\u0aa6\0\u0ae0\0\u0b1a\0\u0b54\0\u0b8e\0\u0bc8\0\u0c02"+
    "\0\u089c\0\u089c\0\u0c3c\0\u089c\0\u0c76\0\u0cb0\0\u0cea\0\u0d24"+
    "\0\u0d5e\0\u0d98\0\u089c\0\u089c\0\u0dd2\0\u0e0c\0\u0e46\0\u0e80"+
    "\0\u0eba\0\u0ef4\0\u0f2e\0\u0f68\0\u0fa2\0\u0fdc\0\u1016\0\u089c"+
    "\0\u1050\0\u108a\0\u10c4\0\u10fe\0\u1138\0\u1172\0\u11ac\0\u11e6"+
    "\0\u1220\0\u125a\0\u1294\0\u12ce\0\u1308\0\u1342\0\u137c\0\u13b6"+
    "\0\u13f0\0\u142a\0\164\0\164\0\164\0\164\0\u1464\0\u149e"+
    "\0\u14d8\0\u1512\0\u149e\0\u154c\0\u149e\0\u1586\0\u149e\0\u149e"+
    "\0\u149e\0\u15c0\0\u149e\0\u15fa\0\u1634\0\u149e\0\u166e\0\u16a8"+
    "\0\u149e\0\u16e2\0\u171c\0\u1756\0\u1790\0\u17ca\0\u1804\0\u183e"+
    "\0\u1878\0\u18b2\0\u18ec\0\u149e\0\u149e\0\u149e\0\u1926\0\u1960"+
    "\0\u149e\0\u199a\0\u19d4\0\u1a0e\0\u1a48\0\u1a82\0\u1abc\0\u1af6"+
    "\0\u149e\0\u1b30\0\u1b6a\0\u1ba4\0\u1bde\0\u149e\0\u1c18\0\u1c52"+
    "\0\u1c8c\0\u1cc6\0\u1d00\0\u149e\0\u1d3a\0\u1d74\0\u1dae\0\u149e"+
    "\0\u1de8\0\u1e22\0\u1e5c\0\u1e96\0\u1ed0\0\u1f0a\0\u1f44\0\u1f7e"+
    "\0\u1fb8\0\u1ff2\0\u1ff2\0\u202c\0\u2066\0\u20a0\0\u20da\0\u2114"+
    "\0\u214e\0\u2188\0\u21c2\0\u21fc\0\u2236\0\u2270\0\u22aa\0\u22e4"+
    "\0\u231e\0\u2358\0\u2392\0\u23cc\0\u2406\0\u2440\0\u1fb8\0\u247a"+
    "\0\u24b4\0\u1fb8\0\u24ee\0\u2528\0\u2562\0\u259c\0\u25d6\0\u2610"+
    "\0\u264a\0\u1fb8\0\u2684\0\u1fb8\0\u1fb8\0\u1fb8\0\u1fb8\0\u26be"+
    "\0\u26f8\0\u2732\0\u276c\0\u1fb8\0\u27a6\0\u27e0\0\u281a\0\u1fb8"+
    "\0\u2854\0\u1fb8\0\u1fb8\0\u1fb8\0\u288e\0\u28c8\0\u2902\0\u28c8"+
    "\0\u293c\0\u2976\0\u29b0\0\u29ea\0\u2a24\0\u2a5e\0\u28c8\0\u2a98"+
    "\0\u2ad2\0\u2b0c\0\u2b46\0\u2b80\0\u2bba\0\u2bf4\0\u2c2e\0\u2c68"+
    "\0\u2ca2\0\u28c8\0\u2cdc\0\u2d16\0\u2d50\0\u28c8\0\u2d8a\0\u2dc4"+
    "\0\u2dfe\0\u2e38\0\u2e72\0\u2eac\0\u2ee6\0\u28c8\0\u2f20\0\u2f5a"+
    "\0\u28c8\0\u28c8\0\u28c8\0\u28c8\0\u2f94\0\u2fce\0\u3008\0\u2f94"+
    "\0\u3042\0\u307c\0\u30b6\0\u2f94\0\u30f0\0\u312a\0\u2f94\0\u2f94"+
    "\0\u3164\0\u319e\0\u2f94\0\u31d8\0\u3212\0\u2f94\0\u324c\0\u3286"+
    "\0\u32c0\0\u2f94\0\u32fa\0\u3334\0\u336e\0\u33a8\0\u2f94\0\u33e2"+
    "\0\u341c\0\u3456\0\u3490\0\u34ca\0\u3504\0\u353e\0\u3578\0\u35b2"+
    "\0\u35ec\0\u3626\0\u3660\0\u369a\0\u36d4\0\u370e\0\u3748\0\u34ca"+
    "\0\u3782\0\u37bc\0\u37f6\0\u3830\0\u34ca\0\u386a\0\u34ca\0\u38a4"+
    "\0\u34ca\0\u38de\0\u3918\0\u3952\0\u3918\0\u398c\0\u39c6\0\u3918"+
    "\0\u3a00\0\u3a3a\0\u3a74\0\u3aae\0\u3ae8\0\u3b22\0\u3b5c\0\u3918"+
    "\0\u3b96\0\u3918\0\u3bd0\0\u3c0a\0\u3918\0\u3c44\0\u3c7e\0\u3cb8"+
    "\0\u3cf2\0\u3d2c\0\u3d66\0\u3da0\0\u3c44\0\u3c44\0\u3dda\0\u3e14"+
    "\0\u3c44\0\u3c44\0\u3e4e\0\u3e88\0\u3ec2\0\u3efc\0\u3e88\0\u3f36"+
    "\0\u3f70\0\u3faa\0\u3fe4\0\u401e\0\u4058\0\u4092\0\u40cc\0\u4106"+
    "\0\u4092\0\u4140\0\u417a\0\u41b4\0\u4092\0\u41ee\0\u4228\0\u4262"+
    "\0\u429c\0\u42d6\0\u4310\0\u434a\0\u4228\0\u4384\0\u43be\0\u4384"+
    "\0\u43f8\0\u4432\0\u446c\0\u44a6\0\u44e0\0\u44a6\0\u44a6\0\u44a6"+
    "\0\u451a\0\u4554\0\u458e\0\u45c8\0\u4602\0\u463c\0\u4676\0\u46b0"+
    "\0\u46ea\0\u4724\0\u475e\0\u4798\0\u47d2\0\u480c\0\u4846\0\u4880"+
    "\0\u48ba\0\u48f4\0\u492e\0\u4968\0\u49a2\0\u49dc\0\u4a16\0\u4a50"+
    "\0\u4a8a\0\u4ac4\0\u4afe\0\u4b38\0\u4b72\0\u4bac\0\u4be6\0\u4c20"+
    "\0\u4c5a\0\u4c94\0\u4cce\0\u4d08\0\u4d42\0\u4d7c\0\u4db6\0\u4df0"+
    "\0\u4e2a\0\u4e64\0\u4e9e\0\u4ed8\0\u4f12\0\u4f4c\0\u4f86\0\u4fc0"+
    "\0\u4ffa\0\u5034\0\u506e\0\u50a8\0\u50e2\0\u511c\0\u5156\0\u5190"+
    "\0\u51ca\0\u5204\0\u523e\0\u5278\0\u52b2\0\u52ec\0\u5326\0\u5360"+
    "\0\u539a\0\u53d4\0\u540e\0\u5448\0\u5482\0\u54bc\0\u54f6\0\u5530"+
    "\0\u556a\0\u55a4\0\u55de\0\u5618\0\u5652\0\u568c\0\u56c6\0\u5700"+
    "\0\u573a\0\u5774\0\u57ae\0\u57e8\0\u5822\0\u585c\0\u5896\0\u58d0"+
    "\0\u590a\0\u5944\0\u597e\0\u59b8\0\u59f2\0\u5a2c\0\u5a66\0\u5aa0"+
    "\0\u5ada\0\u5b14\0\u5b4e\0\u5b88\0\u5bc2\0\u5bfc\0\u5c36\0\u5c70"+
    "\0\u5caa\0\u5ce4\0\u5d1e\0\u5d58\0\u5d92\0\u5dcc\0\u5e06\0\u5e40"+
    "\0\u5e7a\0\u5eb4\0\u5eee\0\u5f28\0\u5f62\0\u5f9c\0\u5fd6\0\u6010"+
    "\0\u604a\0\u6084\0\u60be\0\u60f8\0\u6132\0\u616c\0\u61a6\0\u61e0"+
    "\0\u621a\0\u6254\0\u628e\0\u62c8\0\u6302\0\u633c\0\u6376\0\u63b0"+
    "\0\u63ea\0\u6424\0\u645e\0\u6498\0\u64d2\0\u650c\0\u6546\0\u6580"+
    "\0\u65ba\0\u65f4\0\u662e\0\u6668\0\u66a2\0\u66dc\0\u6716\0\u6750"+
    "\0\u678a\0\u67c4\0\u67fe\0\u6838\0\u6872\0\u68ac\0\u68e6\0\u6920"+
    "\0\u695a\0\u6994\0\u69ce\0\u6a08\0\u6a42\0\u6a7c\0\u6ab6\0\u6af0"+
    "\0\u6b2a\0\u6b64\0\u6b9e\0\u6bd8\0\u6c12\0\u6c4c\0\u6c86\0\u6cc0"+
    "\0\u6cfa\0\u6d34\0\u6d6e\0\u6da8\0\u6de2\0\u6e1c\0\u6e56\0\u6e90"+
    "\0\u6eca\0\u6f04\0\u6f3e\0\u6f78\0\u6fb2\0\u6fec\0\u7026\0\u7060"+
    "\0\u709a\0\u70d4\0\u710e\0\u7148\0\u7182\0\u71bc\0\u71f6\0\u7230"+
    "\0\u726a\0\u72a4\0\u72de\0\u7318\0\u7352\0\u738c\0\u73c6\0\u7400"+
    "\0\u743a\0\u7474\0\u74ae\0\u74e8\0\u7522\0\u755c\0\u7596\0\u75d0"+
    "\0\u760a\0\u7644\0\u767e\0\u76b8\0\u76f2\0\u772c\0\u7766\0\u77a0"+
    "\0\164\0\u77da";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[626];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\3\4\1\5\1\6\1\7\1\10\1\11\1\3"+
    "\1\12\1\3\1\13\1\14\1\12\1\15\1\16\1\17"+
    "\2\12\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\12\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\12\1\37\1\40\1\41\1\12\1\42\1\12"+
    "\1\43\1\12\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\60\2\61"+
    "\1\62\1\3\10\61\1\63\55\61\76\0\1\64\73\0"+
    "\1\65\11\0\1\47\51\0\11\11\1\66\60\11\12\0"+
    "\2\67\1\0\2\67\2\0\34\67\15\0\2\70\2\0"+
    "\10\70\1\71\55\70\15\0\1\14\2\0\1\72\2\0"+
    "\1\73\22\0\1\73\32\0\1\50\5\0\1\74\66\0"+
    "\2\67\1\0\2\75\2\0\1\67\3\75\1\67\1\75"+
    "\10\67\1\75\2\67\2\75\2\67\1\75\6\67\27\0"+
    "\2\67\1\0\2\67\2\0\4\67\1\76\3\67\1\77"+
    "\2\67\1\100\11\67\1\101\6\67\27\0\2\67\1\0"+
    "\2\67\2\0\7\67\1\102\1\67\1\103\7\67\1\104"+
    "\12\67\27\0\2\67\1\0\2\67\2\0\7\67\1\105"+
    "\1\67\1\106\7\67\1\107\12\67\27\0\2\67\1\0"+
    "\2\67\2\0\7\67\1\110\24\67\27\0\2\67\1\0"+
    "\2\67\2\0\4\67\1\111\3\67\1\112\6\67\1\113"+
    "\2\67\1\114\2\67\1\115\1\116\5\67\27\0\2\67"+
    "\1\0\2\67\2\0\3\67\1\117\15\67\1\120\12\67"+
    "\27\0\2\67\1\0\2\67\2\0\4\67\1\121\1\67"+
    "\1\122\4\67\1\123\6\67\1\124\11\67\27\0\2\67"+
    "\1\0\2\67\2\0\3\67\1\125\30\67\27\0\2\67"+
    "\1\0\2\67\2\0\14\67\1\126\3\67\1\127\1\130"+
    "\12\67\27\0\2\67\1\0\2\67\2\0\3\67\1\131"+
    "\5\67\1\132\22\67\27\0\2\67\1\0\2\67\2\0"+
    "\3\67\1\133\3\67\1\134\5\67\1\135\16\67\27\0"+
    "\2\67\1\0\2\67\2\0\3\67\1\136\4\67\1\137"+
    "\23\67\27\0\2\67\1\0\2\67\2\0\7\67\1\140"+
    "\1\141\3\67\1\142\6\67\1\143\10\67\27\0\2\67"+
    "\1\0\2\67\2\0\4\67\1\144\10\67\1\145\6\67"+
    "\1\146\7\67\27\0\2\67\1\0\2\67\2\0\3\67"+
    "\1\147\3\67\1\150\1\67\1\151\14\67\1\152\5\67"+
    "\27\0\2\67\1\0\2\67\2\0\7\67\1\153\24\67"+
    "\27\0\2\67\1\0\2\67\2\0\10\67\1\154\10\67"+
    "\1\155\12\67\27\0\2\67\1\0\2\67\2\0\4\67"+
    "\1\156\6\67\1\157\20\67\27\0\2\67\1\0\2\67"+
    "\2\0\7\67\1\160\24\67\27\0\2\67\1\0\2\67"+
    "\2\0\11\67\1\161\2\67\1\162\17\67\77\0\1\163"+
    "\1\0\1\164\67\0\1\165\71\0\1\166\12\0\1\3"+
    "\102\0\1\61\55\0\2\64\2\0\66\64\6\65\1\167"+
    "\63\65\12\0\2\170\1\0\2\170\2\0\34\170\31\0"+
    "\1\70\72\0\1\74\71\0\1\74\1\171\23\0\1\171"+
    "\41\0\2\170\1\0\2\172\2\0\1\170\3\172\1\170"+
    "\1\172\10\170\1\172\2\170\2\172\2\170\1\172\6\170"+
    "\27\0\2\170\1\0\2\170\2\0\5\170\1\173\26\170"+
    "\27\0\2\170\1\0\2\170\2\0\10\170\1\174\23\170"+
    "\27\0\2\170\1\0\2\170\2\0\6\170\1\175\25\170"+
    "\27\0\2\170\1\0\2\170\2\0\13\170\1\176\20\170"+
    "\27\0\2\170\1\0\2\170\2\0\20\170\1\177\13\170"+
    "\27\0\2\170\1\0\2\170\2\0\15\170\1\200\16\170"+
    "\27\0\2\170\1\0\2\170\2\0\32\170\1\201\1\170"+
    "\27\0\2\170\1\0\2\170\2\0\32\170\1\202\1\170"+
    "\27\0\2\170\1\0\2\170\2\0\12\170\1\203\1\204"+
    "\20\170\27\0\2\170\1\0\2\170\2\0\13\170\1\205"+
    "\20\170\27\0\2\170\1\0\2\170\2\0\5\170\1\206"+
    "\26\170\27\0\2\170\1\0\2\170\2\0\21\170\1\207"+
    "\12\170\27\0\2\170\1\0\2\170\2\0\33\170\1\210"+
    "\27\0\2\170\1\0\2\170\2\0\20\170\1\211\13\170"+
    "\27\0\2\170\1\0\2\170\2\0\11\170\1\212\22\170"+
    "\27\0\2\170\1\0\2\170\2\0\11\170\1\213\1\170"+
    "\1\214\2\170\1\215\1\216\14\170\27\0\2\170\1\0"+
    "\2\170\2\0\11\170\1\217\2\170\1\220\1\221\2\170"+
    "\1\222\13\170\27\0\2\170\1\0\2\170\2\0\17\170"+
    "\1\223\14\170\27\0\2\170\1\0\2\170\2\0\10\170"+
    "\1\224\23\170\27\0\2\170\1\0\2\170\2\0\10\170"+
    "\1\225\4\170\1\226\16\170\27\0\2\170\1\0\2\170"+
    "\2\0\10\170\1\227\23\170\27\0\2\170\1\0\2\170"+
    "\2\0\15\170\1\230\2\170\1\231\13\170\27\0\2\170"+
    "\1\0\2\170\2\0\25\170\1\232\6\170\27\0\2\170"+
    "\1\0\2\170\2\0\25\170\1\233\6\170\27\0\2\170"+
    "\1\0\2\170\2\0\13\170\1\234\20\170\27\0\2\170"+
    "\1\0\2\170\2\0\4\170\1\235\27\170\27\0\2\170"+
    "\1\0\2\170\2\0\3\170\1\236\30\170\27\0\2\170"+
    "\1\0\2\170\2\0\16\170\1\237\15\170\27\0\2\170"+
    "\1\0\2\170\2\0\7\170\1\240\24\170\27\0\2\170"+
    "\1\0\2\170\2\0\23\170\1\241\2\170\1\242\5\170"+
    "\27\0\2\170\1\0\2\170\2\0\10\170\1\243\10\170"+
    "\1\244\12\170\27\0\2\170\1\0\2\170\2\0\17\170"+
    "\1\245\14\170\27\0\2\170\1\0\2\170\2\0\5\170"+
    "\1\246\26\170\27\0\2\170\1\0\2\170\2\0\13\170"+
    "\1\247\20\170\27\0\2\170\1\0\2\170\2\0\11\170"+
    "\1\250\4\170\1\251\1\252\14\170\27\0\2\170\1\0"+
    "\2\170\2\0\15\170\1\253\16\170\27\0\2\170\1\0"+
    "\2\170\2\0\10\170\1\254\23\170\27\0\2\170\1\0"+
    "\2\170\2\0\4\170\1\255\10\170\1\256\16\170\27\0"+
    "\2\170\1\0\2\170\2\0\4\170\1\257\27\170\27\0"+
    "\2\170\1\0\2\170\2\0\10\170\1\260\23\170\27\0"+
    "\2\170\1\0\2\170\2\0\21\170\1\261\12\170\27\0"+
    "\2\170\1\0\2\170\2\0\30\170\1\262\3\170\27\0"+
    "\2\170\1\0\2\170\2\0\11\170\1\263\6\170\1\264"+
    "\13\170\27\0\2\170\1\0\2\170\2\0\21\170\1\265"+
    "\12\170\27\0\2\170\1\0\2\170\2\0\20\170\1\266"+
    "\13\170\27\0\2\170\1\0\2\170\2\0\20\170\1\267"+
    "\13\170\27\0\2\170\1\0\2\170\2\0\11\170\1\270"+
    "\22\170\15\0\6\65\1\167\1\66\62\65\12\0\2\271"+
    "\1\0\2\271\2\0\34\271\32\0\1\272\1\0\1\273"+
    "\35\0\1\273\26\0\2\271\1\0\2\274\2\0\1\271"+
    "\3\274\1\271\1\274\10\271\1\274\2\271\2\274\2\271"+
    "\1\274\6\271\27\0\2\271\1\0\2\271\2\0\3\271"+
    "\1\275\30\271\27\0\2\271\1\0\2\271\2\0\7\271"+
    "\1\276\24\271\27\0\2\271\1\0\2\271\2\0\4\271"+
    "\1\277\27\271\27\0\2\271\1\0\2\271\2\0\17\271"+
    "\1\300\14\271\27\0\2\271\1\0\2\271\2\0\20\271"+
    "\1\301\13\271\27\0\2\271\1\0\2\271\2\0\10\271"+
    "\1\302\23\271\27\0\2\271\1\0\2\271\2\0\21\271"+
    "\1\303\12\271\27\0\2\271\1\0\2\271\2\0\13\271"+
    "\1\304\20\271\27\0\2\271\1\0\2\271\2\0\4\271"+
    "\1\305\27\271\27\0\2\271\1\0\2\271\2\0\7\271"+
    "\1\306\24\271\27\0\2\271\1\0\2\271\2\0\7\271"+
    "\1\307\24\271\27\0\2\271\1\0\2\271\2\0\21\271"+
    "\1\310\12\271\27\0\2\271\1\0\2\271\2\0\20\271"+
    "\1\311\13\271\27\0\2\271\1\0\2\271\2\0\21\271"+
    "\1\312\12\271\27\0\2\271\1\0\2\271\2\0\11\271"+
    "\1\313\22\271\27\0\2\271\1\0\2\271\2\0\21\271"+
    "\1\314\12\271\27\0\2\271\1\0\2\271\2\0\15\271"+
    "\1\315\16\271\27\0\2\271\1\0\2\271\2\0\11\271"+
    "\1\316\22\271\27\0\2\271\1\0\2\271\2\0\22\271"+
    "\1\317\11\271\27\0\2\271\1\0\2\271\2\0\21\271"+
    "\1\320\12\271\27\0\2\271\1\0\2\271\2\0\10\271"+
    "\1\321\23\271\27\0\2\271\1\0\2\271\2\0\21\271"+
    "\1\322\12\271\27\0\2\271\1\0\2\271\2\0\13\271"+
    "\1\323\4\271\1\324\13\271\27\0\2\271\1\0\2\271"+
    "\2\0\13\271\1\325\20\271\27\0\2\271\1\0\2\271"+
    "\2\0\31\271\1\326\2\271\27\0\2\271\1\0\2\271"+
    "\2\0\16\271\1\327\1\330\10\271\1\331\3\271\27\0"+
    "\2\271\1\0\2\271\2\0\21\271\1\332\12\271\27\0"+
    "\2\271\1\0\2\271\2\0\21\271\1\333\12\271\27\0"+
    "\2\271\1\0\2\271\2\0\4\271\1\334\27\271\27\0"+
    "\2\271\1\0\2\271\2\0\21\271\1\335\12\271\27\0"+
    "\2\271\1\0\2\271\2\0\21\271\1\336\12\271\27\0"+
    "\2\271\1\0\2\271\2\0\20\271\1\337\13\271\27\0"+
    "\2\271\1\0\2\271\2\0\21\271\1\340\12\271\27\0"+
    "\2\271\1\0\2\271\2\0\7\271\1\341\24\271\27\0"+
    "\2\271\1\0\2\271\2\0\13\271\1\342\20\271\27\0"+
    "\2\271\1\0\2\271\2\0\3\271\1\343\30\271\27\0"+
    "\2\271\1\0\2\271\2\0\21\271\1\344\12\271\27\0"+
    "\2\271\1\0\2\271\2\0\16\271\1\345\15\271\27\0"+
    "\2\271\1\0\2\271\2\0\3\271\1\346\30\271\27\0"+
    "\2\271\1\0\2\271\2\0\11\271\1\347\22\271\27\0"+
    "\2\271\1\0\2\271\2\0\20\271\1\350\13\271\27\0"+
    "\2\271\1\0\2\271\2\0\11\271\1\351\22\271\27\0"+
    "\2\271\1\0\2\271\2\0\13\271\1\352\20\271\27\0"+
    "\2\271\1\0\2\271\2\0\7\271\1\353\24\271\27\0"+
    "\2\271\1\0\2\271\2\0\14\271\1\354\17\271\27\0"+
    "\2\271\1\0\2\271\2\0\15\271\1\355\16\271\27\0"+
    "\2\356\1\0\2\356\2\0\34\356\32\0\1\272\66\0"+
    "\2\356\1\0\2\357\2\0\1\356\3\357\1\356\1\357"+
    "\10\356\1\357\2\356\2\357\2\356\1\357\6\356\27\0"+
    "\2\356\1\0\2\356\2\0\23\356\1\360\10\356\27\0"+
    "\2\356\1\0\2\356\2\0\15\356\1\361\16\356\27\0"+
    "\2\356\1\0\2\356\2\0\20\356\1\362\13\356\27\0"+
    "\2\356\1\0\2\356\2\0\11\356\1\363\22\356\27\0"+
    "\2\356\1\0\2\356\2\0\10\356\1\364\23\356\27\0"+
    "\2\356\1\0\2\356\2\0\3\356\1\365\30\356\27\0"+
    "\2\356\1\0\2\356\2\0\16\356\1\366\15\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\367\12\356\27\0"+
    "\2\356\1\0\2\356\2\0\20\356\1\370\13\356\27\0"+
    "\2\356\1\0\2\356\2\0\26\356\1\371\5\356\27\0"+
    "\2\356\1\0\2\356\2\0\10\356\1\372\23\356\27\0"+
    "\2\356\1\0\2\356\2\0\3\356\1\373\30\356\27\0"+
    "\2\356\1\0\2\356\2\0\11\356\1\374\22\356\27\0"+
    "\2\356\1\0\2\356\2\0\10\356\1\375\23\356\27\0"+
    "\2\356\1\0\2\356\2\0\4\356\1\376\27\356\27\0"+
    "\2\356\1\0\2\356\2\0\10\356\1\377\23\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\u0100\12\356\27\0"+
    "\2\356\1\0\2\356\2\0\4\356\1\u0101\27\356\27\0"+
    "\2\356\1\0\2\356\2\0\15\356\1\u0102\16\356\27\0"+
    "\2\356\1\0\2\356\2\0\3\356\1\u0103\30\356\27\0"+
    "\2\356\1\0\2\356\2\0\20\356\1\u0104\13\356\27\0"+
    "\2\356\1\0\2\356\2\0\11\356\1\u0105\22\356\27\0"+
    "\2\356\1\0\2\356\2\0\13\356\1\u0106\20\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\u0107\12\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\u0108\12\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\u0109\12\356\27\0"+
    "\2\356\1\0\2\356\2\0\10\356\1\u010a\23\356\27\0"+
    "\2\356\1\0\2\356\2\0\3\356\1\u010b\30\356\27\0"+
    "\2\356\1\0\2\356\2\0\17\356\1\u010c\14\356\27\0"+
    "\2\356\1\0\2\356\2\0\10\356\1\u010d\23\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\u010e\12\356\27\0"+
    "\2\356\1\0\2\356\2\0\15\356\1\u010f\16\356\27\0"+
    "\2\356\1\0\2\356\2\0\20\356\1\u0110\13\356\27\0"+
    "\2\356\1\0\2\356\2\0\31\356\1\u0111\2\356\27\0"+
    "\2\356\1\0\2\356\2\0\4\356\1\u0112\27\356\27\0"+
    "\2\356\1\0\2\356\2\0\15\356\1\u0113\16\356\27\0"+
    "\2\356\1\0\2\356\2\0\21\356\1\u0114\12\356\27\0"+
    "\2\u0115\1\0\2\u0115\2\0\34\u0115\27\0\2\u0115\1\0"+
    "\2\u0116\2\0\1\u0115\3\u0116\1\u0115\1\u0116\10\u0115\1\u0116"+
    "\2\u0115\2\u0116\2\u0115\1\u0116\6\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\26\u0115\1\u0117\5\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\7\u0115\1\u0118\24\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\4\u0115\1\u0119\27\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\26\u0115\1\u011a\5\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\20\u0115\1\u011b\13\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\20\u0115\1\u011c\13\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\10\u0115\1\u011d\23\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\10\u0115\1\u011e\23\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\5\u0115\1\u011f\26\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\20\u0115\1\u0120\13\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\3\u0115\1\u0121\30\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\11\u0115\1\u0122\22\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\21\u0115\1\u0123\12\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\22\u0115\1\u0124\11\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\6\u0115\1\u0125\25\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\30\u0115\1\u0126\3\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\10\u0115\1\u0127\23\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\10\u0115\1\u0128\23\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\4\u0115\1\u0129\27\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\5\u0115\1\u012a\26\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\5\u0115\1\u012b\26\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\10\u0115\1\u012c\23\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\3\u0115\1\u012d\30\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\5\u0115\1\u012e\26\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\20\u0115\1\u012f\13\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\20\u0115\1\u0130\13\u0115\27\0\2\u0115\1\0"+
    "\2\u0115\2\0\11\u0115\1\u0131\3\u0115\1\u0132\16\u0115\27\0"+
    "\2\u0115\1\0\2\u0115\2\0\11\u0115\1\u0133\22\u0115\27\0"+
    "\2\u0134\1\0\2\u0134\2\0\34\u0134\27\0\2\u0134\1\0"+
    "\2\u0135\2\0\1\u0134\3\u0135\1\u0134\1\u0135\10\u0134\1\u0135"+
    "\2\u0134\2\u0135\2\u0134\1\u0135\6\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\20\u0134\1\u0136\13\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\20\u0134\1\u0137\13\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\16\u0134\1\u0138\15\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\7\u0134\1\u0139\24\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\7\u0134\1\u013a\24\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\16\u0134\1\u013b\15\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\15\u0134\1\u013c\16\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\20\u0134\1\u013d\13\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\3\u0134\1\u013e\30\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\21\u0134\1\u013f\12\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\23\u0134\1\u0140\10\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\26\u0134\1\u0141\5\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\26\u0134\1\u0142\5\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\26\u0134\1\u0143\5\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\20\u0134\1\u0144\13\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\6\u0134\1\u0145\25\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\12\u0134\1\u0146\21\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\13\u0134\1\u0147\20\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\27\u0134\1\u0148\4\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\23\u0134\1\u0149\10\u0134\27\0\2\u0134\1\0"+
    "\2\u0134\2\0\7\u0134\1\u014a\24\u0134\27\0\2\u014b\1\0"+
    "\2\u014b\2\0\34\u014b\27\0\2\u014b\1\0\2\u014c\2\0"+
    "\1\u014b\3\u014c\1\u014b\1\u014c\10\u014b\1\u014c\2\u014b\2\u014c"+
    "\2\u014b\1\u014c\6\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\21\u014b\1\u014d\12\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\21\u014b\1\u014e\12\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\20\u014b\1\u014f\13\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\10\u014b\1\u0150\23\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\5\u014b\1\u0151\26\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\21\u014b\1\u0152\12\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\11\u014b\1\u0153\22\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\21\u014b\1\u0154\12\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\16\u014b\1\u0155\15\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\4\u014b\1\u0156\27\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\16\u014b\1\u0157\15\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\21\u014b\1\u0158\12\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\10\u014b\1\u0159\23\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\23\u014b\1\u015a\10\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\3\u014b\1\u015b\30\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\3\u014b\1\u015c\30\u014b\27\0\2\u014b\1\0\2\u014b\2\0"+
    "\4\u014b\1\u015d\27\u014b\27\0\2\u015e\1\0\2\u015e\2\0"+
    "\34\u015e\27\0\2\u015e\1\0\2\u015f\2\0\1\u015e\3\u015f"+
    "\1\u015e\1\u015f\10\u015e\1\u015f\2\u015e\2\u015f\2\u015e\1\u015f"+
    "\6\u015e\27\0\2\u015e\1\0\2\u015e\2\0\10\u015e\1\u0160"+
    "\23\u015e\27\0\2\u015e\1\0\2\u015e\2\0\7\u015e\1\u0161"+
    "\24\u015e\27\0\2\u015e\1\0\2\u015e\2\0\26\u015e\1\u0162"+
    "\5\u015e\27\0\2\u015e\1\0\2\u015e\2\0\13\u015e\1\u0163"+
    "\20\u015e\27\0\2\u015e\1\0\2\u015e\2\0\27\u015e\1\u0164"+
    "\4\u015e\27\0\2\u015e\1\0\2\u015e\2\0\5\u015e\1\u0165"+
    "\26\u015e\27\0\2\u015e\1\0\2\u015e\2\0\21\u015e\1\u0166"+
    "\12\u015e\27\0\2\u015e\1\0\2\u015e\2\0\20\u015e\1\u0167"+
    "\13\u015e\27\0\2\u015e\1\0\2\u015e\2\0\20\u015e\1\u0168"+
    "\13\u015e\27\0\2\u015e\1\0\2\u015e\2\0\21\u015e\1\u0169"+
    "\12\u015e\27\0\2\u015e\1\0\2\u015e\2\0\10\u015e\1\u016a"+
    "\23\u015e\27\0\2\u015e\1\0\2\u015e\2\0\20\u015e\1\u016b"+
    "\13\u015e\27\0\2\u016c\1\0\2\u016c\2\0\34\u016c\27\0"+
    "\2\u016c\1\0\2\u016d\2\0\1\u016c\3\u016d\1\u016c\1\u016d"+
    "\10\u016c\1\u016d\2\u016c\2\u016d\2\u016c\1\u016d\6\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\22\u016c\1\u016e\11\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\10\u016c\1\u016f\23\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\16\u016c\1\u0170\15\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\20\u016c\1\u0171\13\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\3\u016c\1\u0172\30\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\3\u016c\1\u0173\30\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\7\u016c\1\u0174\24\u016c\27\0"+
    "\2\u016c\1\0\2\u016c\2\0\11\u016c\1\u0175\22\u016c\27\0"+
    "\2\u0176\1\0\2\u0176\2\0\34\u0176\27\0\2\u0176\1\0"+
    "\2\u0177\2\0\1\u0176\3\u0177\1\u0176\1\u0177\10\u0176\1\u0177"+
    "\2\u0176\2\u0177\2\u0176\1\u0177\6\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\3\u0176\1\u0178\30\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\21\u0176\1\u0179\12\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\10\u0176\1\u017a\23\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\20\u0176\1\u017b\13\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\20\u0176\1\u017c\13\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\10\u0176\1\u017d\23\u0176\27\0\2\u0176\1\0"+
    "\2\u0176\2\0\7\u0176\1\u017e\24\u0176\27\0\2\u017f\1\0"+
    "\2\u017f\2\0\34\u017f\27\0\2\u017f\1\0\2\u0180\2\0"+
    "\1\u017f\3\u0180\1\u017f\1\u0180\10\u017f\1\u0180\2\u017f\2\u0180"+
    "\2\u017f\1\u0180\6\u017f\27\0\2\u017f\1\0\2\u017f\2\0"+
    "\16\u017f\1\u0181\15\u017f\27\0\2\u017f\1\0\2\u017f\2\0"+
    "\11\u017f\1\u0182\22\u017f\27\0\2\u017f\1\0\2\u017f\2\0"+
    "\11\u017f\1\u0183\22\u017f\27\0\2\u017f\1\0\2\u017f\2\0"+
    "\11\u017f\1\u0184\22\u017f\27\0\2\u017f\1\0\2\u017f\2\0"+
    "\4\u017f\1\u0185\27\u017f\27\0\2\u0186\1\0\2\u0186\2\0"+
    "\34\u0186\27\0\2\u0186\1\0\2\u0187\2\0\1\u0186\3\u0187"+
    "\1\u0186\1\u0187\10\u0186\1\u0187\2\u0186\2\u0187\2\u0186\1\u0187"+
    "\6\u0186\27\0\2\u0186\1\0\2\u0186\2\0\21\u0186\1\u0188"+
    "\12\u0186\27\0\2\u0186\1\0\2\u0186\2\0\4\u0186\1\u0189"+
    "\27\u0186\27\0\2\u0186\1\0\2\u0186\2\0\7\u0186\1\u018a"+
    "\24\u0186\27\0\2\u0186\1\0\2\u0186\2\0\7\u0186\1\u018b"+
    "\24\u0186\27\0\2\u018c\1\0\2\u018c\2\0\34\u018c\27\0"+
    "\2\u018c\1\0\2\u018d\2\0\1\u018c\3\u018d\1\u018c\1\u018d"+
    "\10\u018c\1\u018d\2\u018c\2\u018d\2\u018c\1\u018d\6\u018c\27\0"+
    "\2\u018c\1\0\2\u018c\2\0\30\u018c\1\u018e\3\u018c\27\0"+
    "\2\u018c\1\0\2\u018c\2\0\4\u018c\1\u018f\27\u018c\27\0"+
    "\2\u018c\1\0\2\u018c\2\0\4\u018c\1\u0190\27\u018c\27\0"+
    "\2\u0191\1\0\2\u0191\2\0\34\u0191\27\0\2\u0191\1\0"+
    "\2\u0192\2\0\1\u0191\3\u0192\1\u0191\1\u0192\10\u0191\1\u0192"+
    "\2\u0191\2\u0192\2\u0191\1\u0192\6\u0191\27\0\2\u0193\1\0"+
    "\2\u0193\2\0\34\u0193\27\0\2\u0193\1\0\2\u0194\2\0"+
    "\1\u0193\3\u0194\1\u0193\1\u0194\10\u0193\1\u0194\2\u0193\2\u0194"+
    "\2\u0193\1\u0194\6\u0193\27\0\2\u0195\1\0\2\u0195\2\0"+
    "\34\u0195\27\0\2\u0195\1\0\2\u0196\2\0\1\u0195\3\u0196"+
    "\1\u0195\1\u0196\10\u0195\1\u0196\2\u0195\2\u0196\2\u0195\1\u0196"+
    "\6\u0195\27\0\2\u0197\1\0\2\u0197\2\0\34\u0197\27\0"+
    "\2\u0197\1\0\2\u0198\2\0\1\u0197\3\u0198\1\u0197\1\u0198"+
    "\10\u0197\1\u0198\2\u0197\2\u0198\2\u0197\1\u0198\6\u0197\27\0"+
    "\2\u0199\1\0\2\u0199\2\0\34\u0199\27\0\2\u0199\1\0"+
    "\2\u019a\2\0\1\u0199\3\u019a\1\u0199\1\u019a\10\u0199\1\u019a"+
    "\2\u0199\2\u019a\2\u0199\1\u019a\6\u0199\27\0\2\u019b\1\0"+
    "\2\u019b\2\0\34\u019b\27\0\2\u019b\1\0\2\u019c\2\0"+
    "\1\u019b\3\u019c\1\u019b\1\u019c\10\u019b\1\u019c\2\u019b\2\u019c"+
    "\2\u019b\1\u019c\6\u019b\27\0\2\u019d\1\0\2\u019d\2\0"+
    "\34\u019d\27\0\2\u019d\1\0\2\u019e\2\0\1\u019d\3\u019e"+
    "\1\u019d\1\u019e\10\u019d\1\u019e\2\u019d\2\u019e\2\u019d\1\u019e"+
    "\6\u019d\27\0\2\u019f\1\0\2\u019f\2\0\34\u019f\27\0"+
    "\2\u019f\1\0\2\u01a0\2\0\1\u019f\3\u01a0\1\u019f\1\u01a0"+
    "\10\u019f\1\u01a0\2\u019f\2\u01a0\2\u019f\1\u01a0\6\u019f\27\0"+
    "\2\u01a1\1\0\2\u01a1\2\0\34\u01a1\27\0\2\u01a1\1\0"+
    "\2\u01a2\2\0\1\u01a1\3\u01a2\1\u01a1\1\u01a2\10\u01a1\1\u01a2"+
    "\2\u01a1\2\u01a2\2\u01a1\1\u01a2\6\u01a1\27\0\2\u01a3\1\0"+
    "\2\u01a3\2\0\34\u01a3\27\0\2\u01a3\1\0\2\u01a4\2\0"+
    "\1\u01a3\3\u01a4\1\u01a3\1\u01a4\10\u01a3\1\u01a4\2\u01a3\2\u01a4"+
    "\2\u01a3\1\u01a4\6\u01a3\27\0\2\u01a5\1\0\2\u01a5\2\0"+
    "\34\u01a5\27\0\2\u01a5\1\0\2\u01a6\2\0\1\u01a5\3\u01a6"+
    "\1\u01a5\1\u01a6\10\u01a5\1\u01a6\2\u01a5\2\u01a6\2\u01a5\1\u01a6"+
    "\6\u01a5\27\0\2\u01a7\1\0\2\u01a7\2\0\34\u01a7\27\0"+
    "\2\u01a7\1\0\2\u01a8\2\0\1\u01a7\3\u01a8\1\u01a7\1\u01a8"+
    "\10\u01a7\1\u01a8\2\u01a7\2\u01a8\2\u01a7\1\u01a8\6\u01a7\27\0"+
    "\2\u01a9\1\0\2\u01a9\2\0\34\u01a9\27\0\2\u01a9\1\0"+
    "\2\u01aa\2\0\1\u01a9\3\u01aa\1\u01a9\1\u01aa\10\u01a9\1\u01aa"+
    "\2\u01a9\2\u01aa\2\u01a9\1\u01aa\6\u01a9\27\0\2\u01ab\1\0"+
    "\2\u01ab\2\0\34\u01ab\27\0\2\u01ab\1\0\2\u01ac\2\0"+
    "\1\u01ab\3\u01ac\1\u01ab\1\u01ac\10\u01ab\1\u01ac\2\u01ab\2\u01ac"+
    "\2\u01ab\1\u01ac\6\u01ab\27\0\2\u01ad\1\0\2\u01ad\2\0"+
    "\34\u01ad\27\0\2\u01ad\1\0\2\u01ae\2\0\1\u01ad\3\u01ae"+
    "\1\u01ad\1\u01ae\10\u01ad\1\u01ae\2\u01ad\2\u01ae\2\u01ad\1\u01ae"+
    "\6\u01ad\27\0\2\u01af\1\0\2\u01af\2\0\34\u01af\27\0"+
    "\2\u01af\1\0\2\u01b0\2\0\1\u01af\3\u01b0\1\u01af\1\u01b0"+
    "\10\u01af\1\u01b0\2\u01af\2\u01b0\2\u01af\1\u01b0\6\u01af\27\0"+
    "\2\u01b1\1\0\2\u01b1\2\0\34\u01b1\27\0\2\u01b1\1\0"+
    "\2\u01b2\2\0\1\u01b1\3\u01b2\1\u01b1\1\u01b2\10\u01b1\1\u01b2"+
    "\2\u01b1\2\u01b2\2\u01b1\1\u01b2\6\u01b1\27\0\2\u01b3\1\0"+
    "\2\u01b3\2\0\34\u01b3\27\0\2\u01b3\1\0\2\u01b4\2\0"+
    "\1\u01b3\3\u01b4\1\u01b3\1\u01b4\10\u01b3\1\u01b4\2\u01b3\2\u01b4"+
    "\2\u01b3\1\u01b4\6\u01b3\27\0\2\u01b5\1\0\2\u01b5\2\0"+
    "\34\u01b5\27\0\2\u01b5\1\0\2\u01b6\2\0\1\u01b5\3\u01b6"+
    "\1\u01b5\1\u01b6\10\u01b5\1\u01b6\2\u01b5\2\u01b6\2\u01b5\1\u01b6"+
    "\6\u01b5\27\0\2\u01b7\1\0\2\u01b7\2\0\34\u01b7\27\0"+
    "\2\u01b7\1\0\2\u01b8\2\0\1\u01b7\3\u01b8\1\u01b7\1\u01b8"+
    "\10\u01b7\1\u01b8\2\u01b7\2\u01b8\2\u01b7\1\u01b8\6\u01b7\27\0"+
    "\2\u01b9\1\0\2\u01b9\2\0\34\u01b9\27\0\2\u01b9\1\0"+
    "\2\u01ba\2\0\1\u01b9\3\u01ba\1\u01b9\1\u01ba\10\u01b9\1\u01ba"+
    "\2\u01b9\2\u01ba\2\u01b9\1\u01ba\6\u01b9\27\0\2\u01bb\1\0"+
    "\2\u01bb\2\0\34\u01bb\27\0\2\u01bb\1\0\2\u01bc\2\0"+
    "\1\u01bb\3\u01bc\1\u01bb\1\u01bc\10\u01bb\1\u01bc\2\u01bb\2\u01bc"+
    "\2\u01bb\1\u01bc\6\u01bb\27\0\2\u01bd\1\0\2\u01bd\2\0"+
    "\34\u01bd\27\0\2\u01bd\1\0\2\u01be\2\0\1\u01bd\3\u01be"+
    "\1\u01bd\1\u01be\10\u01bd\1\u01be\2\u01bd\2\u01be\2\u01bd\1\u01be"+
    "\6\u01bd\27\0\2\u01bf\1\0\2\u01bf\2\0\34\u01bf\27\0"+
    "\2\u01bf\1\0\2\u01c0\2\0\1\u01bf\3\u01c0\1\u01bf\1\u01c0"+
    "\10\u01bf\1\u01c0\2\u01bf\2\u01c0\2\u01bf\1\u01c0\6\u01bf\27\0"+
    "\2\u01c1\1\0\2\u01c1\2\0\34\u01c1\27\0\2\u01c1\1\0"+
    "\2\u01c2\2\0\1\u01c1\3\u01c2\1\u01c1\1\u01c2\10\u01c1\1\u01c2"+
    "\2\u01c1\2\u01c2\2\u01c1\1\u01c2\6\u01c1\27\0\2\u01c3\1\0"+
    "\2\u01c3\2\0\34\u01c3\27\0\2\u01c3\1\0\2\u01c4\2\0"+
    "\1\u01c3\3\u01c4\1\u01c3\1\u01c4\10\u01c3\1\u01c4\2\u01c3\2\u01c4"+
    "\2\u01c3\1\u01c4\6\u01c3\27\0\2\u01c5\1\0\2\u01c5\2\0"+
    "\34\u01c5\27\0\2\u01c5\1\0\2\u01c6\2\0\1\u01c5\3\u01c6"+
    "\1\u01c5\1\u01c6\10\u01c5\1\u01c6\2\u01c5\2\u01c6\2\u01c5\1\u01c6"+
    "\6\u01c5\27\0\2\u01c7\1\0\2\u01c7\2\0\34\u01c7\27\0"+
    "\2\u01c7\1\0\2\u01c8\2\0\1\u01c7\3\u01c8\1\u01c7\1\u01c8"+
    "\10\u01c7\1\u01c8\2\u01c7\2\u01c8\2\u01c7\1\u01c8\6\u01c7\27\0"+
    "\2\u01c9\1\0\2\u01c9\2\0\34\u01c9\27\0\2\u01c9\1\0"+
    "\2\u01ca\2\0\1\u01c9\3\u01ca\1\u01c9\1\u01ca\10\u01c9\1\u01ca"+
    "\2\u01c9\2\u01ca\2\u01c9\1\u01ca\6\u01c9\27\0\2\u01cb\1\0"+
    "\2\u01cb\2\0\34\u01cb\27\0\2\u01cb\1\0\2\u01cc\2\0"+
    "\1\u01cb\3\u01cc\1\u01cb\1\u01cc\10\u01cb\1\u01cc\2\u01cb\2\u01cc"+
    "\2\u01cb\1\u01cc\6\u01cb\27\0\2\u01cd\1\0\2\u01cd\2\0"+
    "\34\u01cd\27\0\2\u01cd\1\0\2\u01ce\2\0\1\u01cd\3\u01ce"+
    "\1\u01cd\1\u01ce\10\u01cd\1\u01ce\2\u01cd\2\u01ce\2\u01cd\1\u01ce"+
    "\6\u01cd\27\0\2\u01cf\1\0\2\u01cf\2\0\34\u01cf\27\0"+
    "\2\u01cf\1\0\2\u01d0\2\0\1\u01cf\3\u01d0\1\u01cf\1\u01d0"+
    "\10\u01cf\1\u01d0\2\u01cf\2\u01d0\2\u01cf\1\u01d0\6\u01cf\27\0"+
    "\2\u01d1\1\0\2\u01d1\2\0\34\u01d1\27\0\2\u01d1\1\0"+
    "\2\u01d2\2\0\1\u01d1\3\u01d2\1\u01d1\1\u01d2\10\u01d1\1\u01d2"+
    "\2\u01d1\2\u01d2\2\u01d1\1\u01d2\6\u01d1\27\0\2\u01d3\1\0"+
    "\2\u01d3\2\0\34\u01d3\27\0\2\u01d3\1\0\2\u01d4\2\0"+
    "\1\u01d3\3\u01d4\1\u01d3\1\u01d4\10\u01d3\1\u01d4\2\u01d3\2\u01d4"+
    "\2\u01d3\1\u01d4\6\u01d3\27\0\2\u01d5\1\0\2\u01d5\2\0"+
    "\34\u01d5\27\0\2\u01d5\1\0\2\u01d6\2\0\1\u01d5\3\u01d6"+
    "\1\u01d5\1\u01d6\10\u01d5\1\u01d6\2\u01d5\2\u01d6\2\u01d5\1\u01d6"+
    "\6\u01d5\27\0\2\u01d7\1\0\2\u01d7\2\0\34\u01d7\27\0"+
    "\2\u01d7\1\0\2\u01d8\2\0\1\u01d7\3\u01d8\1\u01d7\1\u01d8"+
    "\10\u01d7\1\u01d8\2\u01d7\2\u01d8\2\u01d7\1\u01d8\6\u01d7\27\0"+
    "\2\u01d9\1\0\2\u01d9\2\0\34\u01d9\27\0\2\u01d9\1\0"+
    "\2\u01da\2\0\1\u01d9\3\u01da\1\u01d9\1\u01da\10\u01d9\1\u01da"+
    "\2\u01d9\2\u01da\2\u01d9\1\u01da\6\u01d9\27\0\2\u01db\1\0"+
    "\2\u01db\2\0\34\u01db\27\0\2\u01db\1\0\2\u01dc\2\0"+
    "\1\u01db\3\u01dc\1\u01db\1\u01dc\10\u01db\1\u01dc\2\u01db\2\u01dc"+
    "\2\u01db\1\u01dc\6\u01db\27\0\2\u01dd\1\0\2\u01dd\2\0"+
    "\34\u01dd\27\0\2\u01dd\1\0\2\u01de\2\0\1\u01dd\3\u01de"+
    "\1\u01dd\1\u01de\10\u01dd\1\u01de\2\u01dd\2\u01de\2\u01dd\1\u01de"+
    "\6\u01dd\27\0\2\u01df\1\0\2\u01df\2\0\34\u01df\27\0"+
    "\2\u01df\1\0\2\u01e0\2\0\1\u01df\3\u01e0\1\u01df\1\u01e0"+
    "\10\u01df\1\u01e0\2\u01df\2\u01e0\2\u01df\1\u01e0\6\u01df\27\0"+
    "\2\u01e1\1\0\2\u01e1\2\0\34\u01e1\27\0\2\u01e1\1\0"+
    "\2\u01e2\2\0\1\u01e1\3\u01e2\1\u01e1\1\u01e2\10\u01e1\1\u01e2"+
    "\2\u01e1\2\u01e2\2\u01e1\1\u01e2\6\u01e1\27\0\2\u01e3\1\0"+
    "\2\u01e3\2\0\34\u01e3\27\0\2\u01e3\1\0\2\u01e4\2\0"+
    "\1\u01e3\3\u01e4\1\u01e3\1\u01e4\10\u01e3\1\u01e4\2\u01e3\2\u01e4"+
    "\2\u01e3\1\u01e4\6\u01e3\27\0\2\u01e5\1\0\2\u01e5\2\0"+
    "\34\u01e5\27\0\2\u01e5\1\0\2\u01e6\2\0\1\u01e5\3\u01e6"+
    "\1\u01e5\1\u01e6\10\u01e5\1\u01e6\2\u01e5\2\u01e6\2\u01e5\1\u01e6"+
    "\6\u01e5\27\0\2\u01e7\1\0\2\u01e7\2\0\34\u01e7\27\0"+
    "\2\u01e7\1\0\2\u01e8\2\0\1\u01e7\3\u01e8\1\u01e7\1\u01e8"+
    "\10\u01e7\1\u01e8\2\u01e7\2\u01e8\2\u01e7\1\u01e8\6\u01e7\27\0"+
    "\2\u01e9\1\0\2\u01e9\2\0\34\u01e9\27\0\2\u01e9\1\0"+
    "\2\u01ea\2\0\1\u01e9\3\u01ea\1\u01e9\1\u01ea\10\u01e9\1\u01ea"+
    "\2\u01e9\2\u01ea\2\u01e9\1\u01ea\6\u01e9\27\0\2\u01eb\1\0"+
    "\2\u01eb\2\0\34\u01eb\27\0\2\u01eb\1\0\2\u01ec\2\0"+
    "\1\u01eb\3\u01ec\1\u01eb\1\u01ec\10\u01eb\1\u01ec\2\u01eb\2\u01ec"+
    "\2\u01eb\1\u01ec\6\u01eb\27\0\2\u01ed\1\0\2\u01ed\2\0"+
    "\34\u01ed\27\0\2\u01ed\1\0\2\u01ee\2\0\1\u01ed\3\u01ee"+
    "\1\u01ed\1\u01ee\10\u01ed\1\u01ee\2\u01ed\2\u01ee\2\u01ed\1\u01ee"+
    "\6\u01ed\27\0\2\u01ef\1\0\2\u01ef\2\0\34\u01ef\27\0"+
    "\2\u01ef\1\0\2\u01f0\2\0\1\u01ef\3\u01f0\1\u01ef\1\u01f0"+
    "\10\u01ef\1\u01f0\2\u01ef\2\u01f0\2\u01ef\1\u01f0\6\u01ef\27\0"+
    "\2\u01f1\1\0\2\u01f1\2\0\34\u01f1\27\0\2\u01f1\1\0"+
    "\2\u01f2\2\0\1\u01f1\3\u01f2\1\u01f1\1\u01f2\10\u01f1\1\u01f2"+
    "\2\u01f1\2\u01f2\2\u01f1\1\u01f2\6\u01f1\27\0\2\u01f3\1\0"+
    "\2\u01f3\2\0\34\u01f3\27\0\2\u01f3\1\0\2\u01f4\2\0"+
    "\1\u01f3\3\u01f4\1\u01f3\1\u01f4\10\u01f3\1\u01f4\2\u01f3\2\u01f4"+
    "\2\u01f3\1\u01f4\6\u01f3\27\0\2\u01f5\1\0\2\u01f5\2\0"+
    "\34\u01f5\27\0\2\u01f5\1\0\2\u01f6\2\0\1\u01f5\3\u01f6"+
    "\1\u01f5\1\u01f6\10\u01f5\1\u01f6\2\u01f5\2\u01f6\2\u01f5\1\u01f6"+
    "\6\u01f5\27\0\2\u01f7\1\0\2\u01f7\2\0\34\u01f7\27\0"+
    "\2\u01f7\1\0\2\u01f8\2\0\1\u01f7\3\u01f8\1\u01f7\1\u01f8"+
    "\10\u01f7\1\u01f8\2\u01f7\2\u01f8\2\u01f7\1\u01f8\6\u01f7\27\0"+
    "\2\u01f9\1\0\2\u01f9\2\0\34\u01f9\27\0\2\u01f9\1\0"+
    "\2\u01fa\2\0\1\u01f9\3\u01fa\1\u01f9\1\u01fa\10\u01f9\1\u01fa"+
    "\2\u01f9\2\u01fa\2\u01f9\1\u01fa\6\u01f9\27\0\2\u01fb\1\0"+
    "\2\u01fb\2\0\34\u01fb\27\0\2\u01fb\1\0\2\u01fc\2\0"+
    "\1\u01fb\3\u01fc\1\u01fb\1\u01fc\10\u01fb\1\u01fc\2\u01fb\2\u01fc"+
    "\2\u01fb\1\u01fc\6\u01fb\27\0\2\u01fd\1\0\2\u01fd\2\0"+
    "\34\u01fd\27\0\2\u01fd\1\0\2\u01fe\2\0\1\u01fd\3\u01fe"+
    "\1\u01fd\1\u01fe\10\u01fd\1\u01fe\2\u01fd\2\u01fe\2\u01fd\1\u01fe"+
    "\6\u01fd\27\0\2\u01ff\1\0\2\u01ff\2\0\34\u01ff\27\0"+
    "\2\u01ff\1\0\2\u0200\2\0\1\u01ff\3\u0200\1\u01ff\1\u0200"+
    "\10\u01ff\1\u0200\2\u01ff\2\u0200\2\u01ff\1\u0200\6\u01ff\27\0"+
    "\2\u0201\1\0\2\u0201\2\0\34\u0201\27\0\2\u0201\1\0"+
    "\2\u0202\2\0\1\u0201\3\u0202\1\u0201\1\u0202\10\u0201\1\u0202"+
    "\2\u0201\2\u0202\2\u0201\1\u0202\6\u0201\27\0\2\u0203\1\0"+
    "\2\u0203\2\0\34\u0203\27\0\2\u0203\1\0\2\u0204\2\0"+
    "\1\u0203\3\u0204\1\u0203\1\u0204\10\u0203\1\u0204\2\u0203\2\u0204"+
    "\2\u0203\1\u0204\6\u0203\27\0\2\u0205\1\0\2\u0205\2\0"+
    "\34\u0205\27\0\2\u0205\1\0\2\u0206\2\0\1\u0205\3\u0206"+
    "\1\u0205\1\u0206\10\u0205\1\u0206\2\u0205\2\u0206\2\u0205\1\u0206"+
    "\6\u0205\27\0\2\u0207\1\0\2\u0207\2\0\34\u0207\27\0"+
    "\2\u0207\1\0\2\u0208\2\0\1\u0207\3\u0208\1\u0207\1\u0208"+
    "\10\u0207\1\u0208\2\u0207\2\u0208\2\u0207\1\u0208\6\u0207\27\0"+
    "\2\u0209\1\0\2\u0209\2\0\34\u0209\27\0\2\u0209\1\0"+
    "\2\u020a\2\0\1\u0209\3\u020a\1\u0209\1\u020a\10\u0209\1\u020a"+
    "\2\u0209\2\u020a\2\u0209\1\u020a\6\u0209\27\0\2\u020b\1\0"+
    "\2\u020b\2\0\34\u020b\27\0\2\u020b\1\0\2\u020c\2\0"+
    "\1\u020b\3\u020c\1\u020b\1\u020c\10\u020b\1\u020c\2\u020b\2\u020c"+
    "\2\u020b\1\u020c\6\u020b\27\0\2\u020d\1\0\2\u020d\2\0"+
    "\34\u020d\27\0\2\u020d\1\0\2\u020e\2\0\1\u020d\3\u020e"+
    "\1\u020d\1\u020e\10\u020d\1\u020e\2\u020d\2\u020e\2\u020d\1\u020e"+
    "\6\u020d\27\0\2\u020f\1\0\2\u020f\2\0\34\u020f\27\0"+
    "\2\u020f\1\0\2\u0210\2\0\1\u020f\3\u0210\1\u020f\1\u0210"+
    "\10\u020f\1\u0210\2\u020f\2\u0210\2\u020f\1\u0210\6\u020f\27\0"+
    "\2\u0211\1\0\2\u0211\2\0\34\u0211\27\0\2\u0211\1\0"+
    "\2\u0212\2\0\1\u0211\3\u0212\1\u0211\1\u0212\10\u0211\1\u0212"+
    "\2\u0211\2\u0212\2\u0211\1\u0212\6\u0211\27\0\2\u0213\1\0"+
    "\2\u0213\2\0\34\u0213\27\0\2\u0213\1\0\2\u0214\2\0"+
    "\1\u0213\3\u0214\1\u0213\1\u0214\10\u0213\1\u0214\2\u0213\2\u0214"+
    "\2\u0213\1\u0214\6\u0213\27\0\2\u0215\1\0\2\u0215\2\0"+
    "\34\u0215\27\0\2\u0215\1\0\2\u0216\2\0\1\u0215\3\u0216"+
    "\1\u0215\1\u0216\10\u0215\1\u0216\2\u0215\2\u0216\2\u0215\1\u0216"+
    "\6\u0215\27\0\2\u0217\1\0\2\u0217\2\0\34\u0217\27\0"+
    "\2\u0217\1\0\2\u0218\2\0\1\u0217\3\u0218\1\u0217\1\u0218"+
    "\10\u0217\1\u0218\2\u0217\2\u0218\2\u0217\1\u0218\6\u0217\27\0"+
    "\2\u0219\1\0\2\u0219\2\0\34\u0219\27\0\2\u0219\1\0"+
    "\2\u021a\2\0\1\u0219\3\u021a\1\u0219\1\u021a\10\u0219\1\u021a"+
    "\2\u0219\2\u021a\2\u0219\1\u021a\6\u0219\27\0\2\u021b\1\0"+
    "\2\u021b\2\0\34\u021b\27\0\2\u021b\1\0\2\u021c\2\0"+
    "\1\u021b\3\u021c\1\u021b\1\u021c\10\u021b\1\u021c\2\u021b\2\u021c"+
    "\2\u021b\1\u021c\6\u021b\27\0\2\u021d\1\0\2\u021d\2\0"+
    "\34\u021d\27\0\2\u021d\1\0\2\u021e\2\0\1\u021d\3\u021e"+
    "\1\u021d\1\u021e\10\u021d\1\u021e\2\u021d\2\u021e\2\u021d\1\u021e"+
    "\6\u021d\27\0\2\u021f\1\0\2\u021f\2\0\34\u021f\27\0"+
    "\2\u021f\1\0\2\u0220\2\0\1\u021f\3\u0220\1\u021f\1\u0220"+
    "\10\u021f\1\u0220\2\u021f\2\u0220\2\u021f\1\u0220\6\u021f\27\0"+
    "\2\u0221\1\0\2\u0221\2\0\34\u0221\27\0\2\u0221\1\0"+
    "\2\u0222\2\0\1\u0221\3\u0222\1\u0221\1\u0222\10\u0221\1\u0222"+
    "\2\u0221\2\u0222\2\u0221\1\u0222\6\u0221\27\0\2\u0223\1\0"+
    "\2\u0223\2\0\34\u0223\27\0\2\u0223\1\0\2\u0224\2\0"+
    "\1\u0223\3\u0224\1\u0223\1\u0224\10\u0223\1\u0224\2\u0223\2\u0224"+
    "\2\u0223\1\u0224\6\u0223\27\0\2\u0225\1\0\2\u0225\2\0"+
    "\34\u0225\27\0\2\u0225\1\0\2\u0226\2\0\1\u0225\3\u0226"+
    "\1\u0225\1\u0226\10\u0225\1\u0226\2\u0225\2\u0226\2\u0225\1\u0226"+
    "\6\u0225\27\0\2\u0227\1\0\2\u0227\2\0\34\u0227\27\0"+
    "\2\u0227\1\0\2\u0228\2\0\1\u0227\3\u0228\1\u0227\1\u0228"+
    "\10\u0227\1\u0228\2\u0227\2\u0228\2\u0227\1\u0228\6\u0227\27\0"+
    "\2\u0229\1\0\2\u0229\2\0\34\u0229\27\0\2\u0229\1\0"+
    "\2\u022a\2\0\1\u0229\3\u022a\1\u0229\1\u022a\10\u0229\1\u022a"+
    "\2\u0229\2\u022a\2\u0229\1\u022a\6\u0229\27\0\2\u022b\1\0"+
    "\2\u022b\2\0\34\u022b\27\0\2\u022b\1\0\2\u022c\2\0"+
    "\1\u022b\3\u022c\1\u022b\1\u022c\10\u022b\1\u022c\2\u022b\2\u022c"+
    "\2\u022b\1\u022c\6\u022b\27\0\2\u022d\1\0\2\u022d\2\0"+
    "\34\u022d\27\0\2\u022d\1\0\2\u022e\2\0\1\u022d\3\u022e"+
    "\1\u022d\1\u022e\10\u022d\1\u022e\2\u022d\2\u022e\2\u022d\1\u022e"+
    "\6\u022d\27\0\2\u022f\1\0\2\u022f\2\0\34\u022f\27\0"+
    "\2\u022f\1\0\2\u0230\2\0\1\u022f\3\u0230\1\u022f\1\u0230"+
    "\10\u022f\1\u0230\2\u022f\2\u0230\2\u022f\1\u0230\6\u022f\27\0"+
    "\2\u0231\1\0\2\u0231\2\0\34\u0231\27\0\2\u0231\1\0"+
    "\2\u0232\2\0\1\u0231\3\u0232\1\u0231\1\u0232\10\u0231\1\u0232"+
    "\2\u0231\2\u0232\2\u0231\1\u0232\6\u0231\27\0\2\u0233\1\0"+
    "\2\u0233\2\0\34\u0233\27\0\2\u0233\1\0\2\u0234\2\0"+
    "\1\u0233\3\u0234\1\u0233\1\u0234\10\u0233\1\u0234\2\u0233\2\u0234"+
    "\2\u0233\1\u0234\6\u0233\27\0\2\u0235\1\0\2\u0235\2\0"+
    "\34\u0235\27\0\2\u0235\1\0\2\u0236\2\0\1\u0235\3\u0236"+
    "\1\u0235\1\u0236\10\u0235\1\u0236\2\u0235\2\u0236\2\u0235\1\u0236"+
    "\6\u0235\27\0\2\u0237\1\0\2\u0237\2\0\34\u0237\27\0"+
    "\2\u0237\1\0\2\u0238\2\0\1\u0237\3\u0238\1\u0237\1\u0238"+
    "\10\u0237\1\u0238\2\u0237\2\u0238\2\u0237\1\u0238\6\u0237\27\0"+
    "\2\u0239\1\0\2\u0239\2\0\34\u0239\27\0\2\u0239\1\0"+
    "\2\u023a\2\0\1\u0239\3\u023a\1\u0239\1\u023a\10\u0239\1\u023a"+
    "\2\u0239\2\u023a\2\u0239\1\u023a\6\u0239\27\0\2\u023b\1\0"+
    "\2\u023b\2\0\34\u023b\27\0\2\u023b\1\0\2\u023c\2\0"+
    "\1\u023b\3\u023c\1\u023b\1\u023c\10\u023b\1\u023c\2\u023b\2\u023c"+
    "\2\u023b\1\u023c\6\u023b\27\0\2\u023d\1\0\2\u023d\2\0"+
    "\34\u023d\27\0\2\u023d\1\0\2\u023e\2\0\1\u023d\3\u023e"+
    "\1\u023d\1\u023e\10\u023d\1\u023e\2\u023d\2\u023e\2\u023d\1\u023e"+
    "\6\u023d\27\0\2\u023f\1\0\2\u023f\2\0\34\u023f\27\0"+
    "\2\u023f\1\0\2\u0240\2\0\1\u023f\3\u0240\1\u023f\1\u0240"+
    "\10\u023f\1\u0240\2\u023f\2\u0240\2\u023f\1\u0240\6\u023f\27\0"+
    "\2\u0241\1\0\2\u0241\2\0\34\u0241\27\0\2\u0241\1\0"+
    "\2\u0242\2\0\1\u0241\3\u0242\1\u0241\1\u0242\10\u0241\1\u0242"+
    "\2\u0241\2\u0242\2\u0241\1\u0242\6\u0241\27\0\2\u0243\1\0"+
    "\2\u0243\2\0\34\u0243\27\0\2\u0243\1\0\2\u0244\2\0"+
    "\1\u0243\3\u0244\1\u0243\1\u0244\10\u0243\1\u0244\2\u0243\2\u0244"+
    "\2\u0243\1\u0244\6\u0243\27\0\2\u0245\1\0\2\u0245\2\0"+
    "\34\u0245\27\0\2\u0245\1\0\2\u0246\2\0\1\u0245\3\u0246"+
    "\1\u0245\1\u0246\10\u0245\1\u0246\2\u0245\2\u0246\2\u0245\1\u0246"+
    "\6\u0245\27\0\2\u0247\1\0\2\u0247\2\0\34\u0247\27\0"+
    "\2\u0247\1\0\2\u0248\2\0\1\u0247\3\u0248\1\u0247\1\u0248"+
    "\10\u0247\1\u0248\2\u0247\2\u0248\2\u0247\1\u0248\6\u0247\27\0"+
    "\2\u0249\1\0\2\u0249\2\0\34\u0249\27\0\2\u0249\1\0"+
    "\2\u024a\2\0\1\u0249\3\u024a\1\u0249\1\u024a\10\u0249\1\u024a"+
    "\2\u0249\2\u024a\2\u0249\1\u024a\6\u0249\27\0\2\u024b\1\0"+
    "\2\u024b\2\0\34\u024b\27\0\2\u024b\1\0\2\u024c\2\0"+
    "\1\u024b\3\u024c\1\u024b\1\u024c\10\u024b\1\u024c\2\u024b\2\u024c"+
    "\2\u024b\1\u024c\6\u024b\27\0\2\u024d\1\0\2\u024d\2\0"+
    "\34\u024d\27\0\2\u024d\1\0\2\u024e\2\0\1\u024d\3\u024e"+
    "\1\u024d\1\u024e\10\u024d\1\u024e\2\u024d\2\u024e\2\u024d\1\u024e"+
    "\6\u024d\27\0\2\u024f\1\0\2\u024f\2\0\34\u024f\27\0"+
    "\2\u024f\1\0\2\u0250\2\0\1\u024f\3\u0250\1\u024f\1\u0250"+
    "\10\u024f\1\u0250\2\u024f\2\u0250\2\u024f\1\u0250\6\u024f\27\0"+
    "\2\u0251\1\0\2\u0251\2\0\34\u0251\27\0\2\u0251\1\0"+
    "\2\u0252\2\0\1\u0251\3\u0252\1\u0251\1\u0252\10\u0251\1\u0252"+
    "\2\u0251\2\u0252\2\u0251\1\u0252\6\u0251\27\0\2\u0253\1\0"+
    "\2\u0253\2\0\34\u0253\27\0\2\u0253\1\0\2\u0254\2\0"+
    "\1\u0253\3\u0254\1\u0253\1\u0254\10\u0253\1\u0254\2\u0253\2\u0254"+
    "\2\u0253\1\u0254\6\u0253\27\0\2\u0255\1\0\2\u0255\2\0"+
    "\34\u0255\27\0\2\u0255\1\0\2\u0256\2\0\1\u0255\3\u0256"+
    "\1\u0255\1\u0256\10\u0255\1\u0256\2\u0255\2\u0256\2\u0255\1\u0256"+
    "\6\u0255\27\0\2\u0257\1\0\2\u0257\2\0\34\u0257\27\0"+
    "\2\u0257\1\0\2\u0258\2\0\1\u0257\3\u0258\1\u0257\1\u0258"+
    "\10\u0257\1\u0258\2\u0257\2\u0258\2\u0257\1\u0258\6\u0257\27\0"+
    "\2\u0259\1\0\2\u0259\2\0\34\u0259\27\0\2\u0259\1\0"+
    "\2\u025a\2\0\1\u0259\3\u025a\1\u0259\1\u025a\10\u0259\1\u025a"+
    "\2\u0259\2\u025a\2\u0259\1\u025a\6\u0259\27\0\2\u025b\1\0"+
    "\2\u025b\2\0\34\u025b\27\0\2\u025b\1\0\2\u025c\2\0"+
    "\1\u025b\3\u025c\1\u025b\1\u025c\10\u025b\1\u025c\2\u025b\2\u025c"+
    "\2\u025b\1\u025c\6\u025b\27\0\2\u025d\1\0\2\u025d\2\0"+
    "\34\u025d\27\0\2\u025d\1\0\2\u025e\2\0\1\u025d\3\u025e"+
    "\1\u025d\1\u025e\10\u025d\1\u025e\2\u025d\2\u025e\2\u025d\1\u025e"+
    "\6\u025d\27\0\2\u025f\1\0\2\u025f\2\0\34\u025f\27\0"+
    "\2\u025f\1\0\2\u0260\2\0\1\u025f\3\u0260\1\u025f\1\u0260"+
    "\10\u025f\1\u0260\2\u025f\2\u0260\2\u025f\1\u0260\6\u025f\27\0"+
    "\2\u0261\1\0\2\u0261\2\0\34\u0261\27\0\2\u0261\1\0"+
    "\2\u0262\2\0\1\u0261\3\u0262\1\u0261\1\u0262\10\u0261\1\u0262"+
    "\2\u0261\2\u0262\2\u0261\1\u0262\6\u0261\27\0\2\u0263\1\0"+
    "\2\u0263\2\0\34\u0263\27\0\2\u0263\1\0\2\u0264\2\0"+
    "\1\u0263\3\u0264\1\u0263\1\u0264\10\u0263\1\u0264\2\u0263\2\u0264"+
    "\2\u0263\1\u0264\6\u0263\27\0\2\u0265\1\0\2\u0265\2\0"+
    "\34\u0265\27\0\2\u0265\1\0\2\u0266\2\0\1\u0265\3\u0266"+
    "\1\u0265\1\u0266\10\u0265\1\u0266\2\u0265\2\u0266\2\u0265\1\u0266"+
    "\6\u0265\27\0\2\u0267\1\0\2\u0267\2\0\34\u0267\27\0"+
    "\2\u0267\1\0\2\u0268\2\0\1\u0267\3\u0268\1\u0267\1\u0268"+
    "\10\u0267\1\u0268\2\u0267\2\u0268\2\u0267\1\u0268\6\u0267\27\0"+
    "\2\u0269\1\0\2\u0269\2\0\34\u0269\27\0\2\u0269\1\0"+
    "\2\u026a\2\0\1\u0269\3\u026a\1\u0269\1\u026a\10\u0269\1\u026a"+
    "\2\u0269\2\u026a\2\u0269\1\u026a\6\u0269\27\0\2\u026b\1\0"+
    "\2\u026b\2\0\34\u026b\27\0\2\u026b\1\0\2\u026c\2\0"+
    "\1\u026b\3\u026c\1\u026b\1\u026c\10\u026b\1\u026c\2\u026b\2\u026c"+
    "\2\u026b\1\u026c\6\u026b\27\0\2\u026d\1\0\2\u026d\2\0"+
    "\34\u026d\27\0\2\u026d\1\0\2\u026e\2\0\1\u026d\3\u026e"+
    "\1\u026d\1\u026e\10\u026d\1\u026e\2\u026d\2\u026e\2\u026d\1\u026e"+
    "\6\u026d\27\0\2\u026f\1\0\2\u026f\2\0\34\u026f\27\0"+
    "\2\u026f\1\0\2\u0270\2\0\1\u026f\3\u0270\1\u026f\1\u0270"+
    "\10\u026f\1\u0270\2\u026f\2\u0270\2\u026f\1\u0270\6\u026f\27\0"+
    "\2\u0271\1\0\2\u0271\2\0\34\u0271\27\0\2\u0271\1\0"+
    "\2\u0272\2\0\1\u0271\3\u0272\1\u0271\1\u0272\10\u0271\1\u0272"+
    "\2\u0271\2\u0272\2\u0271\1\u0272\6\u0271\32\0\2\u0272\3\0"+
    "\3\u0272\1\0\1\u0272\10\0\1\u0272\2\0\2\u0272\2\0"+
    "\1\u0272\23\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30740];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\2\11\2\1\2\11\4\1\1\11\26\1\6\11"+
    "\3\1\5\11\4\1\1\11\1\1\1\0\2\1\1\11"+
    "\67\1\4\11\2\1\1\0\101\1\1\0\u01b5\1\1\11"+
    "\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[626];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;


  _PascalLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  _PascalLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1766) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  public void reset(CharSequence buffer, int initialState){
    reset(buffer, 0, buffer.length(), initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = zzLexicalState;


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL.charAt(zzCurrentPosL++);
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL.charAt(zzCurrentPosL++);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 67: 
          { return EXIT;
          }
        case 111: break;
        case 40: 
          { return TO;
          }
        case 112: break;
        case 8: 
          { return NAME;
          }
        case 113: break;
        case 57: 
          { return TRY;
          }
        case 114: break;
        case 107: 
          { return DISPINTERFACE;
          }
        case 115: break;
        case 4: 
          { return LPAREN;
          }
        case 116: break;
        case 43: 
          { return GE;
          }
        case 117: break;
        case 61: 
          { return SELF;
          }
        case 118: break;
        case 105: 
          { return CONSTRUCTOR;
          }
        case 119: break;
        case 73: 
          { return ARRAY;
          }
        case 120: break;
        case 45: 
          { return AND;
          }
        case 121: break;
        case 82: 
          { return WHILE;
          }
        case 122: break;
        case 110: 
          { return IMPLEMENTATION;
          }
        case 123: break;
        case 109: 
          { return INITIALIZATION;
          }
        case 124: break;
        case 104: 
          { return REINTRODUCE;
          }
        case 125: break;
        case 102: 
          { return THREADVAR;
          }
        case 126: break;
        case 76: 
          { return CONST;
          }
        case 127: break;
        case 63: 
          { return TRUE;
          }
        case 128: break;
        case 87: 
          { return INLINE;
          }
        case 129: break;
        case 24: 
          { return CHARNUM;
          }
        case 130: break;
        case 21: 
          { return COLON;
          }
        case 131: break;
        case 79: 
          { return BREAK;
          }
        case 132: break;
        case 70: 
          { return USES;
          }
        case 133: break;
        case 18: 
          { return EQ;
          }
        case 134: break;
        case 86: 
          { return REPEAT;
          }
        case 135: break;
        case 58: 
          { return END;
          }
        case 136: break;
        case 12: 
          { return HEXNUM;
          }
        case 137: break;
        case 25: 
          { return KEYWORDESCAPE;
          }
        case 138: break;
        case 2: 
          { yybegin(YYINITIAL); return TokenType.WHITE_SPACE;
          }
        case 139: break;
        case 90: 
          { return LIBRARY;
          }
        case 140: break;
        case 99: 
          { return INHERITED;
          }
        case 141: break;
        case 56: 
          { return SET;
          }
        case 142: break;
        case 48: 
          { return NIL;
          }
        case 143: break;
        case 29: 
          { return NUMBER_REAL;
          }
        case 144: break;
        case 92: 
          { return EXPORTS;
          }
        case 145: break;
        case 15: 
          { return COMMA;
          }
        case 146: break;
        case 5: 
          { return MULT;
          }
        case 147: break;
        case 34: 
          { return ON;
          }
        case 148: break;
        case 51: 
          { return MOD;
          }
        case 149: break;
        case 60: 
          { return XOR;
          }
        case 150: break;
        case 3: 
          { return DIV;
          }
        case 151: break;
        case 74: 
          { return RAISE;
          }
        case 152: break;
        case 84: 
          { return OBJECT;
          }
        case 153: break;
        case 83: 
          { return DOWNTO;
          }
        case 154: break;
        case 89: 
          { return EXCEPT;
          }
        case 155: break;
        case 50: 
          { return IDIV;
          }
        case 156: break;
        case 13: 
          { return PLUS;
          }
        case 157: break;
        case 55: 
          { return SHL;
          }
        case 158: break;
        case 65: 
          { return TYPE;
          }
        case 159: break;
        case 46: 
          { return ASM;
          }
        case 160: break;
        case 54: 
          { return SHR;
          }
        case 161: break;
        case 31: 
          { return NUMBER_HEX;
          }
        case 162: break;
        case 28: 
          { return STRING_LITERAL;
          }
        case 163: break;
        case 19: 
          { return LT;
          }
        case 164: break;
        case 77: 
          { return CLASS;
          }
        case 165: break;
        case 91: 
          { return PROGRAM;
          }
        case 166: break;
        case 11: 
          { return DOT;
          }
        case 167: break;
        case 33: 
          { return DO;
          }
        case 168: break;
        case 37: 
          { return IN;
          }
        case 169: break;
        case 14: 
          { return SEMI;
          }
        case 170: break;
        case 7: 
          { return COMMENT;
          }
        case 171: break;
        case 75: 
          { return LABEL;
          }
        case 172: break;
        case 78: 
          { return FALSE;
          }
        case 173: break;
        case 108: 
          { return RESOURCESTRING;
          }
        case 174: break;
        case 49: 
          { return NEW;
          }
        case 175: break;
        case 20: 
          { return GT;
          }
        case 176: break;
        case 17: 
          { return RBRACK;
          }
        case 177: break;
        case 52: 
          { return OUT;
          }
        case 178: break;
        case 103: 
          { return DESTRUCTOR;
          }
        case 179: break;
        case 36: 
          { return OF;
          }
        case 180: break;
        case 94: 
          { return ABSOLUTE;
          }
        case 181: break;
        case 96: 
          { return CONTINUE;
          }
        case 182: break;
        case 35: 
          { return OR;
          }
        case 183: break;
        case 38: 
          { return IS;
          }
        case 184: break;
        case 44: 
          { return ASSIGN;
          }
        case 185: break;
        case 69: 
          { return UNIT;
          }
        case 186: break;
        case 16: 
          { return LBRACK;
          }
        case 187: break;
        case 53: 
          { return VAR;
          }
        case 188: break;
        case 101: 
          { return PROCEDURE;
          }
        case 189: break;
        case 100: 
          { return INTERFACE;
          }
        case 190: break;
        case 98: 
          { return FUNCTION;
          }
        case 191: break;
        case 68: 
          { return FILE;
          }
        case 192: break;
        case 106: 
          { return FINALIZATION;
          }
        case 193: break;
        case 47: 
          { return NOT;
          }
        case 194: break;
        case 30: 
          { return NUMBER_BIN;
          }
        case 195: break;
        case 95: 
          { return OPERATOR;
          }
        case 196: break;
        case 23: 
          { return AT;
          }
        case 197: break;
        case 66: 
          { return ELSE;
          }
        case 198: break;
        case 26: 
          { return STRING;
          }
        case 199: break;
        case 39: 
          { return IF;
          }
        case 200: break;
        case 72: 
          { return WITH;
          }
        case 201: break;
        case 42: 
          { return NE;
          }
        case 202: break;
        case 9: 
          { return NUMBER_INT;
          }
        case 203: break;
        case 27: 
          { yybegin(YYINITIAL); return STRING_LITERAL;
          }
        case 204: break;
        case 93: 
          { return FINALLY;
          }
        case 205: break;
        case 64: 
          { return THEN;
          }
        case 206: break;
        case 71: 
          { return GOTO;
          }
        case 207: break;
        case 81: 
          { return UNTIL;
          }
        case 208: break;
        case 10: 
          { return MINUS;
          }
        case 209: break;
        case 41: 
          { return LE;
          }
        case 210: break;
        case 59: 
          { return FOR;
          }
        case 211: break;
        case 62: 
          { return CASE;
          }
        case 212: break;
        case 6: 
          { return RPAREN;
          }
        case 213: break;
        case 80: 
          { return BEGIN;
          }
        case 214: break;
        case 85: 
          { return RECORD;
          }
        case 215: break;
        case 22: 
          { return DEREF;
          }
        case 216: break;
        case 1: 
          { yybegin(YYINITIAL); return TokenType.BAD_CHARACTER;
          }
        case 217: break;
        case 32: 
          { return AS;
          }
        case 218: break;
        case 97: 
          { return PROPERTY;
          }
        case 219: break;
        case 88: 
          { return PACKED;
          }
        case 220: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
