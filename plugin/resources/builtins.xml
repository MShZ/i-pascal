<builtins>
    <type>Byte</type>
    <type>ShortInt</type>
    <type>Word</type>
    <type>SmallInt</type>
    <type>LongWord</type>
    <type>LongInt</type>
    <type>QWord</type>
    <type>Int64</type>
    <type>Boolean</type>
    <type>Boolean16</type>
    <type>Boolean32</type>
    <type>Boolean64</type>
    <type>ByteBool</type>
    <type>WordBool</type>
    <type>QWordBool</type>
    <type>Char</type>
    <type>String</type>
    <type>WideChar</type>
    <type>ShortString</type>
    <type>AnsiString</type>
    <type>WideString</type>
    <type>UnicodeString</type>
    <type>OpenString</type>
    <type>Single</type>
    <type>Double</type>
    <type>Extended</type>
    <type>CExtended</type>
    <type>Currency</type>
    <type>Pointer</type>
    <type>NearPointer</type>
    <type>Variant</type>
    <type>OleVariant</type>
    <type>Comp</type>
    <type>Text</type>
    <type>TypedFile</type>
    <type>Real</type>
    <type>PChar</type>
    <type>PPChar</type>
    <type>PPPChar</type>
    <type>UTF8String</type>
    <type>PUTF8String</type>
    <type>RawByteString</type>
    <type>HRESULT</type>
    <type>TDateTime</type>
    <type>TDate</type>
    <type>TTime</type>
    <type>TError</type>
    <type>PString</type>
    <type>PSingle</type>
    <type>PDouble</type>
    <type>PExtended</type>
    <type>PPDouble</type>
    <type>PCurrency</type>
    <type>PComp</type>
    <type>PSmallInt</type>
    <type>PShortInt</type>
    <type>PInteger</type>
    <type>PByte</type>
    <type>PWord</type>
    <type>PDWord</type>
    <type>PLongWord</type>
    <type>PLongint</type>
    <type>PCardinal</type>
    <type>PQWord</type>
    <type>PInt64</type>
    <type>PPtrInt</type>
    <type>PPtrUInt</type>
    <type>PSizeInt</type>
    <type>PBoolean</type>
    <type>PShortString</type>
    <type>PAnsiString</type>
    <type>PDate</type>
    <type>PDateTime</type>
    <type>PError</type>
    <type>PVariant</type>
    <type>POleVariant</type>
    <type>PWideChar</type>
    <type>PPWideChar</type>
    <type>PWideString</type>
    <type>PUnicodeChar</type>
    <type>PUnicodeString</type>
    <type>PText</type>
    <type>PPointer</type>
    <type>TTextLineBreakStyle</type>
    <type>TProcedure</type>
    <type>PRTLCriticalSection</type>
    <type>TRTLCriticalSection</type>
    <type>TEntryInformation</type>
    <type>IntegerArray</type>
    <type>PIntegerArray</type>
    <type>PointerArray</type>
    <type>PPointerArray</type>
    <type>TBoundArray</type>
    <type>TPCharArray</type>
    <type>PPCharArray</type>
    <type>TCtrlBreakHandler</type>
    <type>real48</type>
    <type>TStandardCodePageEnum</type>
    <type>TUnicodeStringManager</type>
    <type>TRuntimeError</type>
    <type>TErrorProc</type>
    <type>TAbstractErrorProc</type>
    <type>TAssertErrorProc</type>
    <type>TSafeCallErrorProc</type>
    <type>TObject</type>
    <type>IUnknown</type>
    <type>TClass</type>
    <type>PClass</type>
    <type>TGuid</type>
    <type>TMethod</type>
    <type>IInvokable</type>
    <type>IEnumerator</type>
    <type>IEnumerable</type>
    <type>IDispatch</type>
    <type>TInterfacedObject</type>
    <type>TInterfacedClass</type>
    <type>TAggregatedObject</type>
    <type>TContainedObject</type>
    <type>PUnknown</type>
    <type>PPUnknown</type>
    <type>PDispatch</type>
    <type>TExceptProc</type>
    <type>PVarRec</type>
    <type>TVarRec</type>
    <type>TVarData</type>
    <type>TFPCHeapStatus</type>
    <type>THeapStatus</type>
    <type>PMemoryManager</type>
    <type>TMemoryManager</type>
    <type>PRTLEvent</type>
    <type>TThreadFunc</type>
    <type>TBeginThreadHandler</type>
    <type>TEndThreadHandler</type>
    <type>TThreadHandler</type>
    <type>TThreadSwitchHandler</type>
    <type>TWaitForThreadTerminateHandler</type>
    <type>TThreadSetPriorityHandler</type>
    <type>TThreadGetPriorityHandler</type>
    <type>TGetCurrentThreadIdHandler</type>
    <type>TCriticalSectionHandler</type>
    <type>TCriticalSectionHandlerTryEnter</type>
    <type>TInitThreadVarHandler</type>
    <type>TRelocateThreadVarHandler</type>
    <type>TAllocateThreadVarsHandler</type>
    <type>TReleaseThreadVarsHandler</type>
    <type>TBasicEventHandler</type>
    <type>TBasicEventWaitForHandler</type>
    <type>TBasicEventCreateHandler</type>
    <type>TRTLEventHandler</type>
    <type>TRTLEventHandlerTimeout</type>
    <type>TRTLCreateEventHandler</type>
    <type>TSempahoreInitHandler</type>
    <type>TSemaphoreDestroyHandler</type>
    <type>TSemaphorePostHandler</type>
    <type>TSemaphoreWaitHandler</type>
    <type>TThreadManager</type>
    <type>Cardinal</type>
    <type>Integer</type>
    <type>UInt64</type>
    <type>ValReal</type>
    <type>NativeInt</type>
    <type>NativeUint</type>
    <type>CodePointer</type>
    <type>Int8</type>
    <type>Int16</type>
    <type>Int32</type>
    <type>IntPtr</type>
    <type>UInt8</type>
    <type>UInt16</type>
    <type>UInt32</type>
    <type>UIntPtr</type>
    <type>AnsiChar</type>
    <type>TAnsiChar</type>
    <type>PAnsiChar</type>
    <type>PNativeInt</type>
    <type>PInt8</type>
    <type>PInt16</type>
    <type>PInt32</type>
    <type>PIntPtr</type>
    <type>PUInt8</type>
    <type>PUInt16</type>
    <type>PUInt32</type>
    <type>PUIntPtr</type>
    <type>WChar</type>
    <type>UnicodeChar</type>
    <type>THandle</type>
    <type>TThreadID</type>
    <type>TextFile</type>
    <type>IInterface</type>

    <var>vtInteger</var>
    <var>vtBoolean</var>
    <var>vtChar</var>
    <var>vtExtended</var>
    <var>vtString</var>
    <var>vtPointer</var>
    <var>vtPChar</var>
    <var>vtObject</var>
    <var>vtClass</var>
    <var>vtWideChar</var>
    <var>vtPWideChar</var>
    <var>vtAnsiString</var>
    <var>vtCurrency</var>
    <var>vtVariant</var>
    <var>vtInterface</var>
    <var>vtWideString</var>
    <var>vtInt64</var>
    <var>vtQWord</var>
    <var>vtUnicodeString</var>
    <var>DirectorySeparator</var>
    <var>DriveSeparator</var>
    <var>ExtensionSeparator</var>
    <var>PathSeparator</var>
    <var>AllowDirectorySeparators</var>
    <var>AllowDriveSeparators</var>
    <var>ExceptProc</var>
    <var>RaiseProc</var>
    <var>MaxSIntValue</var>
    <var>MaxUIntValue</var>
    <var>maxLongint</var>
    <var>maxSmallint</var>
    <var>maxint</var>
    <var>Test8086</var>
    <var>Test8087</var>
    <var>ExitProc</var>
    <var>Erroraddr</var>
    <var>Errorcode</var>
    <var>IsMultiThread</var>
    <var>ThreadingAlreadyUsed</var>
    <var>ExitCode</var>
    <var>RandSeed</var>
    <var>IsConsole</var>
    <var>DefaultSystemCodePage</var>
    <var>DefaultUnicodeCodePage</var>
    <var>ThreadID</var>
    <var>ExceptionClass</var>

    <routine>assert</routine>
    <routine>SizeOf</routine>
    <routine>ord</routine>
    <routine>chr</routine>
    <routine>write</routine>
    <routine>writeln</routine>
    <routine>read</routine>
    <routine>readln</routine>
    <routine>length</routine>
    <routine>setLength</routine>
    <routine>copy</routine>
    <routine>concat</routine>
    <routine>slice</routine>
    <routine>EnumResourceTypes</routine>
    <routine>EnumResourceNames</routine>
    <routine>EnumResourceLanguages</routine>
    <routine>FindResource</routine>
    <routine>FindResourceEx</routine>
    <routine>LoadResource</routine>
    <routine>SizeofResource</routine>
    <routine>LockResource</routine>
    <routine>UnlockResource</routine>
    <routine>FreeResource</routine>
    <routine>HINSTANCE</routine>
    <routine>InitCriticalSection</routine>
    <routine>DoneCriticalsection</routine>
    <routine>EnterCriticalsection</routine>
    <routine>LeaveCriticalsection</routine>
    <routine>TryEnterCriticalsection</routine>
    <routine>BasicEventCreate</routine>
    <routine>basiceventdestroy</routine>
    <routine>basiceventResetEvent</routine>
    <routine>basiceventSetEvent</routine>
    <routine>basiceventWaitFor</routine>
    <routine>ResumeThread</routine>
    <routine>ThreadSwitch</routine>
    <routine>KillThread</routine>
    <routine>WaitForThreadTerminate</routine>
    <routine>ThreadSetPriority</routine>
    <routine>ThreadGetPriority</routine>
    <routine>GetCurrentThreadId</routine>
    <routine>CloseThread</routine>
    <routine>SuspendThread</routine>
    <routine>FlushThread</routine>
    <routine>EndThread</routine>
    <routine>BeginThread</routine>
    <routine>DoneThread</routine>
    <routine>InitThread</routine>
    <routine>InitThreadVars</routine>
    <routine>SetThreadManager</routine>
    <routine>GetMemoryManager</routine>
    <routine>SetMemoryManager</routine>
    <routine>IsMemoryManagerSet</routine>
    <routine>SysGetmem</routine>
    <routine>SysFreemem</routine>
    <routine>SysFreememSize</routine>
    <routine>SysMemSize</routine>
    <routine>SysAllocMem</routine>
    <routine>SysTryResizeMem</routine>
    <routine>SysReAllocMem</routine>
    <routine>SysGetHeapStatus</routine>
    <routine>SysGetFPCHeapStatus</routine>
    <routine>Getmem</routine>
    <routine>Getmemory</routine>
    <routine>new</routine>
    <routine>mark</routine>
    <routine>Freemem</routine>
    <routine>Freememory</routine>
    <routine>dispose</routine>
    <routine>release</routine>
    <routine>MemSize</routine>
    <routine>AllocMem</routine>
    <routine>ReAllocMem</routine>
    <routine>ReAllocMemory</routine>
    <routine>GetHeapStatus</routine>
    <routine>GetFPCHeapStatus</routine>
    <routine>GetCPUCount</routine>
    <routine>Null</routine>
    <routine>Unassigned</routine>
    <routine>Error</routine>
    <routine>Paramcount</routine>
    <routine>ParamStr</routine>
    <routine>cmdLine</routine>
    <routine>RunError</routine>
    <routine>AddExitProc</routine>
    <routine>halt</routine>
    <routine>AbstractError</routine>
    <routine>EmptyMethod</routine>
    <routine>Move</routine>
    <routine>FillChar</routine>
    <routine>FillByte</routine>
    <routine>FillWord</routine>
    <routine>FillDWord</routine>
    <routine>FillQWord</routine>
    <routine>IndexChar</routine>
    <routine>IndexByte</routine>
    <routine>Indexword</routine>
    <routine>IndexDWord</routine>
    <routine>IndexQWord</routine>
    <routine>CompareChar</routine>
    <routine>CompareByte</routine>
    <routine>CompareWord</routine>
    <routine>CompareDWord</routine>
    <routine>prefetch</routine>
    <routine>ReadBarrier</routine>
    <routine>ReadDependencyBarrier</routine>
    <routine>ReadWriteBarrier</routine>
    <routine>WriteBarrier</routine>
    <routine>lo</routine>
    <routine>hi</routine>
    <routine>low</routine>
    <routine>high</routine>
    <routine>swap</routine>
    <routine>Align</routine>
    <routine>Random</routine>
    <routine>Randomize</routine>
    <routine>abs</routine>
    <routine>sqr</routine>
    <routine>odd</routine>
    <routine>SwapEndian</routine>
    <routine>BEtoN</routine>
    <routine>LEtoN</routine>
    <routine>NtoBE</routine>
    <routine>NtoLE</routine>
    <routine>RorByte</routine>
    <routine>RolByte</routine>
    <routine>PopCnt</routine>
    <routine>Set8087CW</routine>
    <routine>Get8087CW</routine>
    <routine>GetSSECSR</routine>
    <routine>float_raise</routine>
    <routine>pi</routine>
    <routine>sqrt</routine>
    <routine>arctan</routine>
    <routine>tan</routine>
    <routine>ln</routine>
    <routine>sin</routine>
    <routine>cos</routine>
    <routine>exp</routine>
    <routine>round</routine>
    <routine>frac</routine>
    <routine>int</routine>
    <routine>trunc</routine>
    <routine>FPower10</routine>
    <routine>ptr</routine>
    <routine>addr</routine>
    <routine>strpas</routine>
    <routine>Delete</routine>
    <routine>Insert</routine>
    <routine>Pos</routine>
    <routine>SetString</routine>
    <routine>ShortCompareText</routine>
    <routine>upCase</routine>
    <routine>lowerCase</routine>
    <routine>Space</routine>
    <routine>hexStr</routine>
    <routine>OctStr</routine>
    <routine>binStr</routine>
    <routine>chr</routine>
    <routine>str</routine>
    <routine>val</routine>
    <routine>UniqueString</routine>
    <routine>StringOfChar</routine>
    <routine>StringCodePage</routine>
    <routine>StringElementSize</routine>
    <routine>StringRefCount</routine>
    <routine>SetCodePage</routine>
    <routine>SetMultiByteConversionCodePage</routine>
    <routine>WideCharToString</routine>
    <routine>StringToWideChar</routine>
    <routine>WideCharLenToString</routine>
    <routine>UnicodeCharToString</routine>
    <routine>StringToUnicodeChar</routine>
    <routine>UnicodeToUtf8</routine>
    <routine>Utf8ToUnicode</routine>
    <routine>UTF8Encode</routine>
    <routine>UTF8Decode</routine>
    <routine>AnsiToUtf8</routine>
    <routine>Utf8ToAnsi</routine>
    <routine>GetWideStringManager</routine>
    <routine>SetWideStringManager</routine>
    <routine>GetUnicodeStringManager</routine>
    <routine>SetUnicodeStringManager</routine>
    <routine>AssignFile</routine>
    <routine>CloseFile</routine>
    <routine>Assign</routine>
    <routine>Rewrite</routine>
    <routine>Reset</routine>
    <routine>Close</routine>
    <routine>BlockWrite</routine>
    <routine>BlockRead</routine>
    <routine>FilePos</routine>
    <routine>FileSize</routine>
    <routine>Seek</routine>
    <routine>EOF</routine>
    <routine>Erase</routine>
    <routine>Rename</routine>
    <routine>Truncate</routine>
    <routine>Append</routine>
    <routine>Flush</routine>
    <routine>EOLn</routine>
    <routine>SeekEOLn</routine>
    <routine>SeekEOF</routine>
    <routine>SetTextBuf</routine>
    <routine>SetTextLineEnding</routine>
    <routine>chdir</routine>
    <routine>mkdir</routine>
    <routine>rmdir</routine>
    <routine>getdir</routine>
    <routine>IOResult</routine>
    <routine>GetProcessID</routine>
    <routine>GetThreadID</routine>
    <routine>InterLockedIncrement</routine>
    <routine>InterLockedDecrement</routine>
    <routine>InterLockedExchange</routine>
    <routine>InterLockedExchangeAdd</routine>
    <routine>InterlockedCompareExchange</routine>
    <routine>Hash</routine>
    <routine>inc</routine>
    <routine>dec</routine>
    <routine>pred</routine>
    <routine>succ</routine>
    <routine>typeinfo</routine>
</builtins>